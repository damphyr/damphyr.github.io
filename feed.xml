<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ampelofilosofies</title>
    <description>Random comments on random subjects in random language</description>
    <link>http://www.ampelofilosofies.gr</link>
    <atom:link href="http://www.ampelofilosofies.gr/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Multiplatform build adventures: Xamarin</title>
        <description>&lt;p&gt;Now that I can have everything &lt;a href=&quot;/software/2019/06/12/dotnet-core-clean-builds&quot;&gt;out-of-band&lt;/a&gt; I like the dotnet core tooling a bit more.&lt;/p&gt;

&lt;p&gt;But it looks like we&amp;#39;re not there for everything yet - funny in a way, since now, even though in this project everything is Microsoft, I still have to integrate differrent toolchains.&lt;/p&gt;

&lt;p&gt;So, the newest problem on the block: Xamarin Android projects cannot be restored with &lt;code&gt;dotnet restore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/dotnet/project-system/issues/2498&quot;&gt;relevant bug entry&lt;/a&gt; is at the time of writing still open and &lt;em&gt;not&lt;/em&gt; adressed in VS2019.&lt;/p&gt;

&lt;p&gt;So, we fall back to msbuild with&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;msbuild /t:restore AndroidApp.csproj
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Thu, 13 Jun 2019 14:15:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2019/06/13/xamarin-dotnet</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2019/06/13/xamarin-dotnet</guid>
      </item>
    
      <item>
        <title>Out-of-band DotNet core</title>
        <description>&lt;p&gt;I am a proponent of &amp;quot;out-of-band&amp;quot; builds. This simply means that any and all files generated by the build process should not under any circumstances be found next to sources.&lt;/p&gt;

&lt;p&gt;The simplest check for this is doing a &lt;code&gt;git status&lt;/code&gt; after building and seeing no untracked files, provided your .gitignore is (almost) empty.&lt;/p&gt;

&lt;p&gt;Correspondingly I find long .gitignore files simply annoying and an indication of sloppy development practices.&lt;/p&gt;

&lt;p&gt;This is a long saga, there are &lt;a href=&quot;/software/2016/02/16/damn-you-vs&quot;&gt;rant entries&lt;/a&gt; in this blog from way back in 2016.&lt;/p&gt;

&lt;p&gt;Visual Studio was my greatest adversary in the quest for clean workspaces...until DotNet core came out.&lt;/p&gt;

&lt;p&gt;Previously in the saga we figured out how to get the intermediate &lt;em&gt;compilation&lt;/em&gt; results out of the way by setting &lt;code&gt;&amp;lt;IntermediateOutputPath&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But dotnet does not respect this property. It uses instead &lt;code&gt;&amp;lt;BaseIntermediateOutputPath&amp;gt;&lt;/code&gt;. Things like nuget specs and package assets (properties and tasks for nuget packages etc.) will land in this directory.&lt;/p&gt;

&lt;p&gt;OK, you say, I&amp;#39;ll set that in the project file and be done. And then you spent a couple of hours trying to figure out why the setting is not respected.&lt;/p&gt;

&lt;p&gt;It all has to do with the way msbuild defines properties and figuring out which property to use and when it is defined.&lt;/p&gt;

&lt;p&gt;See, in the drive to have everything &amp;quot;just work&amp;quot; when you create a dotnet core project in Visual Studio the project element will have a magic &lt;em&gt;Sdk&lt;/em&gt; attribute:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Sdk=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft.NET.Sdk&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This, very slyly, instructs msbuild to import a whole bunch of property and task files. No need for you to know all the dirty details, innit?&lt;/p&gt;

&lt;p&gt;And if you try to override it late, you will get a nice warning&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;C:\Program Files\dotnet\sdk\2.2.300\Microsoft.Common.CurrentVersion.targets(813,5): warning MSB3539:
The value of the property &quot;BaseIntermediateOutputPath&quot; was modified after it was used by MSBuild
which can lead to unexpected build results.
Tools such as NuGet will write outputs to the path specified by the &quot;MSBuildProjectExtensionsPath&quot; instead.
To set this property, you must do so before Microsoft.Common.props is imported, for example by using
Directory.Build.props.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Directory.Build.props&lt;/code&gt; is one of those &amp;quot;magic&amp;quot; files. It is loaded very early and you can set these properties there. It will get picked up if it is there and msbuild will search far and wide for it (it will go up the directory tree and then look in a few places more).&lt;/p&gt;

&lt;h2&gt;Not that simple&lt;/h2&gt;

&lt;p&gt;Timing is everything it seems. There are things you cannot put in &lt;code&gt;Directory.Build.props&lt;/code&gt;. For example, the &lt;em&gt;AssemblyName&lt;/em&gt; property is not set yet when the file is processed, so we cannot really set &lt;em&gt;OutputPath&lt;/em&gt; and &lt;em&gt;IntermediateOutputPath&lt;/em&gt; to safely differentiate compilation artifacts.&lt;/p&gt;

&lt;p&gt;The one thing we learned the hard way: Always add &lt;code&gt;$(Configuration)&lt;/code&gt;somewhere in the path otherwise you will get very wierd results (as in &amp;quot;honey, I linked the wrong binaries&amp;quot;).&lt;/p&gt;

&lt;p&gt;So nowadays I split the difference.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Directory.Build.props&lt;/code&gt; is very basic, as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;BaseOutputPath&amp;gt;&lt;/span&gt;$(MSBuildThisFileDirectory)\..\out\build&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BaseOutputPath&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;BaseIntermediateOutputPath&amp;gt;&lt;/span&gt;$(BaseOutputPath)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BaseIntermediateOutputPath&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the use of &lt;em&gt;MSBuildThisFileDirectory&lt;/em&gt; in the base path, that allows us to define the path relative to the property file.&lt;/p&gt;

&lt;p&gt;And then there is a &lt;code&gt;BuildProperties.proj&lt;/code&gt; where we set project and configuration specific paths:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;OutputPath&amp;gt;&lt;/span&gt;$(BaseOutputPath)\$(AssemblyName)\bin\$(Configuration)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/OutputPath&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;IntermediateOutputPath&amp;gt;&lt;/span&gt;$(BaseIntermediateOutputPath)$(AssemblyName)\obj\$(Configuration)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/IntermediateOutputPath&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is then added to each project file with an import statement:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Import&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Project=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;..\BuildProperties.proj&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also need to remove any &lt;em&gt;OutputPath&lt;/em&gt; definitions in conditional entries (usually the &lt;em&gt;Condition=&amp;quot;&amp;#39;$(Configuration)|$(Platform)&amp;#39;==&amp;#39;Debug|AnyCPU&amp;#39;&amp;quot;&lt;/em&gt; and &lt;em&gt;Condition=&amp;quot;&amp;#39;$(Configuration)|$(Platform)&amp;#39;==&amp;#39;Release|AnyCPU&amp;#39;&amp;quot;&lt;/em&gt; entries.
Visual Studio does not expose &lt;em&gt;IntermediateOutputPath&lt;/em&gt; in the GUI so you will not see an entry unless you add it.&lt;/p&gt;

&lt;h2&gt;Out of band builds ftw!&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;out/&lt;/code&gt; should be the only entry in .gitignore.&lt;/p&gt;

&lt;p&gt;This setup will force msbuild and VS to at least compile everything in &lt;code&gt;out/build&lt;/code&gt; and stop littering the workspace.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Jun 2019 14:15:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2019/06/12/dotnet-core-clean-builds</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2019/06/12/dotnet-core-clean-builds</guid>
      </item>
    
      <item>
        <title>Ruby on Windows: Chocolatey time</title>
        <description>&lt;p&gt;I have been steadily increasing my use of chocolatey for installation of toolchains on Windows.&lt;/p&gt;

&lt;p&gt;There are still a few problems, e.g. not all packages allow setting an alternate installation directory etc., but these are problems we had with the original installers as well.&lt;/p&gt;

&lt;p&gt;There are also some version pinning issues with some packages that seem to originate on the way chocolatey provides URLs to updated packages. These lead to failures if the version is pinned and the package gets updated.&lt;/p&gt;

&lt;h2&gt;Ruby and chocolatey&lt;/h2&gt;

&lt;p&gt;Since the 2.4 version, the &lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; has switched to using the newer msys2 toolchain for C extension compilation which complicated the process of automating installation via the MSI installer.&lt;/p&gt;

&lt;p&gt;Fortunately both msys2 and the newer RubyInstallaer are available as chocolatey packages.&lt;/p&gt;

&lt;p&gt;Unfortunately there are still some hiccups.&lt;/p&gt;

&lt;p&gt;You have to take care to place the msys2 path entry &lt;em&gt;before&lt;/em&gt; the Git for Windows path entry.
The git installer bundles a mingw version that will mess up gem installations if detected before msys2.&lt;/p&gt;

&lt;p&gt;Same goes for the ChefDK path entry, only this time with ruby: ChefDK bundles a ruby distro and gem installations will go array if it is found first in the path.&lt;/p&gt;

&lt;h2&gt;Chef and chocolatey&lt;/h2&gt;

&lt;p&gt;My current infrastructure-as-code solution for turning Windows into a development environment is based on &lt;a href=&quot;https://www.chef.io/products/chef-infra/&quot;&gt;Chef&lt;/a&gt; and the &lt;a href=&quot;https://supermarket.chef.io/cookbooks/windev/versions/0.8.4&quot;&gt;windev cookbook&lt;/a&gt; (full disclosure: windev is maintained by yours truly, so doh!).&lt;/p&gt;

&lt;p&gt;Chef provides a &lt;a href=&quot;https://docs.chef.io/resource_chocolatey_package.html&quot;&gt;chocolatey_package&lt;/a&gt; resource and windev adds a configuration helper &lt;em&gt;choco_packages&lt;/em&gt; for adding packages.&lt;/p&gt;

&lt;p&gt;The following snippet will configure windev to install ruby on a windows machine:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;environment&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PATH&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;c:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bin;c:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;msys2;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Program Files&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Git&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bin;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ProgramData&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;chocolatey&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bin;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;system32;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Windows;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;System32&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Wbem;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;System32&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WindowsPowerShell&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;v1.0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;opscode&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;chefdk&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;embedded&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bin;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;choco_packages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ruby&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.6.3.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/InstallDir:'C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ruby'&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;msys2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/InstallDir:'C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;msys2'&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;run_list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;recipe[windev::environment]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;recipe[windev::packages]&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, there is a bug in the interaction between Chef and chocolatey (in the choco_package resource), specific to the msys2 installation.&lt;/p&gt;

&lt;p&gt;The installation of msys2 will hang and fail with a timeout - though msys2 will have been correctly installed. Re-run Chef and everything continues normally.&lt;/p&gt;

&lt;p&gt;Kinda defeats the main purpose of using it with Chef, but we still get to document in code how the environment is set up.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Jun 2019 12:15:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2019/06/12/ruby-on-windows</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2019/06/12/ruby-on-windows</guid>
      </item>
    
      <item>
        <title>Adventures in Azure DevOps: It begins</title>
        <description>&lt;p&gt;I&amp;#39;ve been doing work with Azure Devops lately and since there&amp;#39;s things to learn, there will be blog posts.&lt;/p&gt;

&lt;p&gt;Now I am well known for my vitriolic views on Microsoft&amp;#39;s approach to ALM (Application Lifecycle Management) which were mainly represented in TFS, a behemoth that is now in its 5th (?) rebranding phase. Only this time it looks more like a reincarnation. It has been 13 years since they first gave it a go after all.&lt;/p&gt;

&lt;h2&gt;First impressions&lt;/h2&gt;

&lt;p&gt;The complexity is now mostly gone, hidden away. This is a good thing.
You can still trace Microsoft&amp;#39;s need to satisfy enterprise policies and wierd gate-keeping bureaucracy, but these things are mostly hidden in security and access policy configuration pages. And the defaults are finally sane.&lt;/p&gt;

&lt;p&gt;The mainly point-and-click GUI driven way of doing everything is still there and it is still offered as the &amp;quot;way to do things&amp;quot; but at least the docs make it obvious that there is a way to script &lt;em&gt;everything&lt;/em&gt; and that it is there from the beginning.&lt;/p&gt;

&lt;p&gt;So, usable and dare I say, promising.&lt;/p&gt;

&lt;h2&gt;Things to come&lt;/h2&gt;

&lt;p&gt;There&amp;#39;s very little I will be able to say about issue tracking, the default Agile/Scrum issue tracker with the standard boards more than covers whatever requirements I have for maintaining a backlog. My job is to get automation up and running: builds, tests, packaging and deployment.&lt;/p&gt;

&lt;p&gt;You will notice I avoid saying &amp;quot;DevOps&amp;quot; and CI. The first does not apply to me individually, but to my team, and the second is a byproduct of getting all the things right (i.e. if we get the automation right and we apply it to every change &lt;em&gt;then&lt;/em&gt; we will have CI)&lt;/p&gt;

&lt;p&gt;On the other hand, expect a lot on pipelines and how they get implemented in Azure Devops.
Getting a single build for a single tech up and running is ridiculously easy - the system analyzes your code and pretty much serves you the build jobs on a platter.&lt;/p&gt;

&lt;p&gt;But I never have a single build or a system that uses a single tech, do I?&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Jun 2019 12:15:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2019/06/06/azure-devops-beginning</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2019/06/06/azure-devops-beginning</guid>
      </item>
    
      <item>
        <title>ForgetMeNot: Git Submodules</title>
        <description>&lt;p&gt;I&amp;#39;m more likely to choose a monorepo solution if possible and I generally dislike the submodule feature in git but as always there are valid use cases (e.g. think about building a platform instead of a system).&lt;/p&gt;

&lt;p&gt;So I put git submodules to work and immediately started doing the same mistake again and again: typos in the directory name for the module.&lt;/p&gt;

&lt;p&gt;Now, just changing the entries in the .gitmodules file is not enough to get the module out of the way, we also need to remove the repository index entries.&lt;/p&gt;

&lt;p&gt;To cleanly remove a git submodule you need the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git submodule deinit module
git &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;typoed_module_dir
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Removed submodule module&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; .git/modules/typoed_module_dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You then add the submodule back (after you have checked the spelling this time) and obviously explicitly set the branch and the checkout directory so that you can verify everything is typed correctly.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git submodule add &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; master https://git.host/module.git CorrectlySpelledDir
git submodule init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Sun, 17 Mar 2019 11:15:21 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2019/03/17/forgetmenot-git-submodules</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2019/03/17/forgetmenot-git-submodules</guid>
      </item>
    
      <item>
        <title>On laziness</title>
        <description>&lt;p&gt;I am a lazy person. Apparently this is not unusual, on the contrary &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S0028393218303981&quot;&gt;recently published research&lt;/a&gt; indicates this is the default setting for humans.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m also a software developer, so according to Larry Wall I already posess one of the three great virtues (the other two being impatience and hubris) required for greatness. And I have to say my innate tendency to avoid work has helped immensely in shaping my career and success as a software developer.&lt;/p&gt;

&lt;p&gt;The funny thing is, it took a lot of work. I am a lazy person with 20 years hard work behind him. Most of it is relabeling work as fun.&lt;/p&gt;

&lt;p&gt;A small aside on language: In Greek, there are two words for work, &amp;quot;δουλειά&amp;quot; and &amp;quot;εργασία&amp;quot;. The first one shares the same root as the word for slavery, the second shares the root with the word for project (also the root that leads to English words like ergonomics). There is a clear distinction between work you &lt;em&gt;have&lt;/em&gt; to do (&amp;quot;δουλειά&amp;quot;) and work that contributes something (&amp;quot;έργο&amp;quot;).&lt;/p&gt;

&lt;p&gt;So, with this in mind, as long as I work to contribute (&amp;quot;εργάζομαι&amp;quot;) instead of having to work (&amp;quot;δουλεύω&amp;quot;) all is good. Meaning that if the work is intellectually stimulating, presents an interesting problem to solve and is conducted in a friendly, appreciating and supportive environment, well, it does not feel like work.&lt;/p&gt;

&lt;p&gt;So I find myself working hard and appreciating the benefits, but with a complete understanding for my 9 year old&amp;#39;s utter disinterest in doing homework.&lt;/p&gt;

&lt;p&gt;The current approach of parental influence is to differentiate lazy into &amp;quot;smart lazy&amp;quot; and &amp;quot;dumb lazy&amp;quot; since &amp;quot;smart&amp;quot; is good and we like being &amp;quot;smart&amp;quot;, while &amp;quot;lazy&amp;quot; is not necessarily totally negative since grandma calls dad lazy all the time and grandma has absolute authority but we like dad :P.&lt;/p&gt;

&lt;p&gt;Smart lazy is learning your maths tables by heart, dumb lazy is doing &amp;quot;6 times 5&amp;quot; by doing &amp;quot;5,10,15,20,25,30&amp;quot; every single time.&lt;/p&gt;

&lt;p&gt;But the upfront cost of memorizing multiplication tables is something not easily accepted. &amp;quot;Avoid boring repetiteveness&amp;quot; is not an argument that has traction with either 9 year olds or management - both groups simply let others do the boring bits.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s some obvious parallels to software development and automation and tools and all this DevOps hooha. Most of the content on this blog is dedicated to figuring out how to let the computers do the repetitive boring stuff. What it leaves out is how often we have to do the boring, repetitive stuff because it just seems &amp;quot;easier&amp;quot; or &amp;quot;cheaper&amp;quot;.&lt;/p&gt;

&lt;p&gt;Which leads us to the next chapter: &amp;quot;justifying upfront investment on the promise of future gains&amp;quot;. 9 year olds are an even tougher crowd than management on this subject. Send help.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Sep 2018 10:15:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2018/09/20/on-laziness</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2018/09/20/on-laziness</guid>
      </item>
    
      <item>
        <title>On remote working</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://imgs.xkcd.com/comics/duty_calls.png&quot; alt=&quot;Duty calls&quot;&gt; &lt;/p&gt;

&lt;p&gt;My little bubble of the internet has been showing me a lot more bombastic statements about remote working, of the type &amp;quot;it makes people a lot more effective&amp;quot;, &amp;quot;it is the way of the future&amp;quot;, &amp;quot;soon all will work from home in their pyjamas&amp;quot; etc.&lt;/p&gt;

&lt;p&gt;There is enough noise that I felt I had to throw my hat into the ring :) &lt;/p&gt;

&lt;h2&gt;In an office, far far away&lt;/h2&gt;

&lt;p&gt;This remote working thing is not new. I submit to you a &lt;a href=&quot;http://www.wideteams.com/2012/06/27/podcast-38-vassilis-rizopoulos-of-zuhlke/&quot;&gt;Wideteams podcast interview&lt;/a&gt; by yours truly, from way back in 2012. I had been remote working for 8 years by then.&lt;/p&gt;

&lt;p&gt;This post is not about how great remote working is (it is pretty great - sometimes). It is not about how to do it right (&lt;a href=&quot;https://avdi.codes/&quot;&gt;Avdi Grimm&amp;#39;s&lt;/a&gt; WideTeams podcast is choke full of good advice, even though the last episode is now 5 years back. Go check it out).&lt;/p&gt;

&lt;p&gt;This is the antilogue, the reaction to the pendulum swinging to the opposite extreme end.&lt;/p&gt;

&lt;p&gt;Btw., my summer office looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/SummerOffice.jpg&quot; alt=&quot;Summer Office&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Context is everything&lt;/h2&gt;

&lt;p&gt;I worked remotely for close to 12 years. In this context &amp;quot;remotely&amp;quot; means that my place of residence was in a different country and different timezone than my place of work.&lt;/p&gt;

&lt;p&gt;Technically, I still work remotely. Here &amp;quot;remotely&amp;quot; means that I can choose to not go to the office on certain days and that in the summers I can maximize time spent by the sea by adding a couple of weeks of remote working to my regular holidays.&lt;/p&gt;

&lt;p&gt;Also means that in projects (for the last 15 years) I have been part of a distributed team, whether I or others from the team were remote. Multiple cities, multiple offices, single team.&lt;/p&gt;

&lt;h2&gt;Full remote is a special case&lt;/h2&gt;

&lt;p&gt;I would argue that going full remote (working full time from home with no office and all contact through online avatars) is neither effective, nor healthy. &lt;/p&gt;

&lt;p&gt;To be a star remote worker (let&amp;#39;s say software engineer, a job I know well) you need excellent communication skills, you need to separate your work and private life while they co-inhabit your space and time (have you ever tried to build a release while a toddler demands attention?) and you need reciprocate understanding of the difficulties distance introduces to human relationships (thick skin and a soft hand). All of this on top of your actual work subject. &lt;/p&gt;

&lt;p&gt;Software engineers have it easy, communication skills are a required part of the job description ;P  (What?! They are not?! Well, they should be!)&lt;/p&gt;

&lt;p&gt;I have met such people. They are precious few and a special kind of personality. Over the years, even they have moved out of the house - co-working spaces are a blessing in this regard. And the funny thing is, with these precious few, the most productive, inspiring and effective times were while we were co-located.&lt;/p&gt;

&lt;h2&gt;Human, you (social) animal.&lt;/h2&gt;

&lt;p&gt;The &amp;quot;we are social animals&amp;quot; platitude is especially appropriate in the case of remote working. The creative part of problem solving, the part that involves sketching on whiteboard/paper/napkin runs better when the people involved are in the same room. &lt;/p&gt;

&lt;p&gt;The deciding factor is what in German is called &amp;quot;Gestik und Mimik&amp;quot;, the sum total of gestures, facial expressions, movement etc. None of our remote collaboration solutions is in a position to deliver the full set of signals we transmit when communicating.&lt;/p&gt;

&lt;p&gt;So having the full palette of interactions available improves creative collaboration. This I believe is a conclusion that we can accept unchalenged ;). &lt;/p&gt;

&lt;p&gt;A less discernible benefit of frequent personal contact is familiarity with said palette of signals: think of it as adding a voice to an email/message. This in turn (again a personal observation) facilitates later remote collaboration. Someone typing on a chat box is a stranger, impersonal and easy to dismiss. Also, a lot easier to misinterpret due to missing empathic signaling.&lt;/p&gt;

&lt;p&gt;My personal experience is that at about the third week of &amp;quot;isolation&amp;quot; I start drifting. I either run out of clearly defined goals, lose touch with the team or lose focus because the immediate environment presents more pressing distractions. The time span feels inversely propotional to the size of the team - the bigger the team the faster one loses overview. At that point I need a get-together to reapply color and sound to avatars so to speak.&lt;/p&gt;

&lt;h2&gt;The answer is: It depends&lt;/h2&gt;

&lt;p&gt;Rules of thumb for when should you strive to get your team in one place:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the team is new, or you&amp;#39;re new to the team.&lt;/li&gt;
&lt;li&gt;When you&amp;#39;re in the &amp;quot;how do we do this?&amp;quot;, instead of the &amp;quot;let&amp;#39;s do this&amp;quot; phase.&lt;/li&gt;
&lt;li&gt;At regular intervals as a refresher.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I feel very comfortable with the hybrid remote solution: Have the team get together regularly, have flexibility and support in place for working from home.&lt;/p&gt;

&lt;p&gt;It is not the unconditional recruiting silver bullet: &lt;/p&gt;

&lt;p&gt;It requires relative short distances for all team members to accomodate regular meetings. You can&amp;#39;t do away with the office. You can&amp;#39;t reasonably hire from the other side of the globe etc.&lt;/p&gt;

&lt;p&gt;But I find it is a good compromise between the inflexibility of on-premise teams and the isolation of working remotely.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 May 2018 10:15:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2018/05/28/on-remote-working</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2018/05/28/on-remote-working</guid>
      </item>
    
      <item>
        <title>gaudi 1.0.0</title>
        <description>&lt;p&gt;Four years ago, almost to the day (the first commit was on the 15th November 2013) I took the work of about a year and a half, spent a week cleaning it up and rewriting and then put it up on GitHub.&lt;/p&gt;

&lt;p&gt;gaudi started as a build system for a very specific and opinionated way of building C: The code organized in small self-contained &amp;quot;units&amp;quot; we so conveniently/confusingly named components, all options concentrated in one place, everything text based and one very consistent user interface thanks to rake.&lt;/p&gt;

&lt;p&gt;The intentions from the beginning were the clear mapping of an architecture (N layers and componetized) on the source directory structure, the single source of truth for configuration options, and the simplicity of rake in creating a consistent usage model. Boy did it prove powerful.&lt;/p&gt;

&lt;p&gt;I spent the next couple of years building all-encompassing systems around systems on that simple basis. Consistent, repeatable, all knowing, all measuring build/test/deploy/release juggernauts across toolchains and platforms&lt;sup&gt;1/&lt;sup&gt;.&lt;/p&gt;

&lt;p&gt;And then there were no more C/C++ projects. But there was a project with Java and some wierd XML compiler stuff and half a dozen other tools and also massive amounts of data shunted through Jenkins via shell scripts and everything had to go to the cloud.&lt;/p&gt;

&lt;p&gt;And then another project with .NET, but also angular and grunt and gradle and msbuild and at first impression every other technology under the sun mixed in a cement mixer after being pounded by Mjölnir.&lt;/p&gt;

&lt;p&gt;And then that client that was adamant that Ruby could not be used, and it had to be Python&lt;sup&gt;2&lt;/sup&gt;. &lt;/p&gt;

&lt;p&gt;The same concepts, wildly different technologies, every case bordering on total chaos. It served as a focusing lens. And so we come to gaudi 1.0.0.&lt;/p&gt;

&lt;p&gt;I am insanely proud of this gaudi release: It&amp;#39;s the first time in my career I ship something &lt;strong&gt;by removing 70% of the features and code and repackaging&lt;/strong&gt;. It is my love of deleting code made manifest :)&lt;/p&gt;

&lt;p&gt;The code itself is not important. Copy it, port it, throw it away. I dare you to find a language/tool combo that is better suited to this task than Ruby/rake - I&amp;#39;ve tried them all: graddle, grunt, gulp, ant, cmake, make, nmake, dmake, maven, scons. The list is long. Only Elixir/mix comes close.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m old, and I like Ruby and this code has worked for over 5 years across all 1.9 and 2.x versions of Ruby. Still not the important part.&lt;/p&gt;

&lt;p&gt;The important part was &lt;a href=&quot;https://github.com/damphyr/gaudi/blob/master/doc/BUILDSYSTEMS.md&quot;&gt;the distinction between build system and build management system&lt;/a&gt;, also discussed previously in &lt;a href=&quot;/software/2014/07/17/vars-build-rules&quot;&gt;VAR&amp;#39;s build rules&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the other one is the &lt;a href=&quot;https://github.com/damphyr/gaudi/blob/master/doc/ASPIRATIONS.md&quot;&gt;list of aspirations&lt;/a&gt;. Theory in bullet points if you will, but oh so important if you ever want to get a team on board.&lt;/p&gt;

&lt;p&gt;There are more things that belong to this list, I just haven&amp;#39;t finished the distillation process. The core will not get any additional features apart from some self-documenting tasks. &lt;/p&gt;

&lt;p&gt;What I think is possible is taking the idea behind gaudi-c (code substrate for an opinionated methodology) and applying it to the areas of responsibility of a build system with an eye toward building &lt;em&gt;systems&lt;/em&gt; as opposed to &lt;em&gt;technologies&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/BuildSystem.png&quot; alt=&quot;Areas of Responsibility&quot;&gt;&lt;/p&gt;

&lt;p&gt;A &amp;quot;blue&amp;quot; module is almost too easy considering &lt;a href=&quot;https://github.com/damphyr/rutema&quot;&gt;rutema&lt;/a&gt; is based on a similar set of principles with a narrower application domain.&lt;/p&gt;

&lt;p&gt;But in the end it is all glorified batch processing of command lines placed at various points of an acyclical dependency graph. So much fun!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; I had already worked myself up to the corner of &amp;quot;the automation guy&amp;quot; but this was the all-in. I can code in a dozen programming languages, have written bootloaders in C, web services in Java, .NET and Ruby, daemons for Linux, a persistency layer in Java, remote control software for locomotives but I am now &amp;quot;the build system&amp;quot; guy. Worse, I am the &amp;quot;devops guy&amp;quot;. But that is a rant for another time.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;That hurt, not because of Ruby vs. Python, but because of rake vs. absolutely-nothing-approaching-usable.&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Nov 2017 14:14:21 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2017/11/29/gaudi-one-oh</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2017/11/29/gaudi-one-oh</guid>
      </item>
    
      <item>
        <title>Simple Cooking: Κολοκυθοτυρόπιτα της ξενιτιάς</title>
        <description>&lt;p&gt;Ένα από τα πράγματα που μου λείπουν έντονα στην ξενιτιά είναι οι πίτες. &lt;/p&gt;

&lt;p&gt;Η πίτα είναι δύσκολη στη μετάφραση στους Βορειοδυτικοευρωπαίους, μιας και pie είναι πιο κοντά σε τάρτα ή τριφτή, το pastry είναι πολύ γενικό, ενώ οι Γερμανοί απλώς δεν έχουν λέξη για το είδος (αν εξαιρέσεις το strudel, αλλά μετά πρέπει να τους εξηγείς ότι η γέμιση είναι πικάντικη και όχι γλυκιά - άσε που τα γλασάρουν όλα με ζάχαρη), ενώ το pita παραπέμπει στην κυπριακή, στην πίτα για το γύρο κλπ. Και πάλι φυσικά μας σώζουν οι Τούρκοι με το börek/burek μια και είναι το πλησιέστερο σε αυτό που ο Έλληνας ονομάζει πίτα, και άσε τους Κρητικούς να λένε μπουρέκι κάτι εντελώς άσχετο.&lt;/p&gt;

&lt;p&gt;Εκεί που σηκώνω τα χέρια ψηλά είναι στη μετάφραση του &amp;quot;σφολιάτα&amp;quot;. Και το αστείο είναι ότι το έτοιμο φύλο που θα βρει κανείς στο σουπερμάρκετ στη Γερμανία (απλά Blätterteig -&amp;gt; &amp;quot;Φύλο&amp;quot;) είναι σφολιάτα.&lt;/p&gt;

&lt;p&gt;Τέλως πάντων, οι φίλοι μου οι Τούρκοι στο θέμα πίτα είναι μια απογοήτευση και έχει να κάνει με τις συνταγές τους για το φύλο, δεν τους βγαίνει τραγανό με τίποτα.&lt;/p&gt;

&lt;p&gt;Τι να κάνεις λοιπόν, θα κάτσεις να κάνεις πίτα. Άρχισα με τυρόπιτα (πως αλλιώς), περάσα στη σπανακόπιτα, έφτασε η ώρα της πρασόπιτας και εκεί κάπου άρχισα να κοιτάω και τι άλλο έχει τριγύρω. &lt;/p&gt;

&lt;p&gt;Οκτώβρη μήνα εδώ στο Βορρά πορτοκαλίζει ο τόπος. Πλημμύρα στην κολοκύθα σε λέω. Βγαίνουμε τσάρκα στα χωράφια και μετά τις έχουμε στοιβαγμένες στο αποθηκάκι - στη μια γωνιά τα μήλα, στην άλλη οι κολοκύθες. Και τις σφάζουμε μία, μία. Αν δε μας τα χαλάσει το global warming, τρώμε κολοκύθα μέχρι το Φλεβάρη σε λέω (και έχω και πασατέμπο για όλη την προκριματική φάση του Τσαμπιονσλίγκι).&lt;/p&gt;

&lt;p&gt;Η παρακάτω συνταγή μας βγήκε από έναν πειραματισμό (και τελικά, διαβάζοντας &lt;a href=&quot;/rumblings/2010/06/05/simple-cooking-chicken-inspiracin&quot;&gt;την άλλη συνταγή&lt;/a&gt;, &amp;quot;πειραματίζομαι&amp;quot; για μένα σημαίνει &amp;quot;βάλε κύμινο&amp;quot;), και έχει γίνει τρομερό σουξέ. &lt;/p&gt;

&lt;p&gt;Μόνο που κανείς εδώ δε μπορεί να προφέρει το κολοκυθοτυρόπιτα.&lt;/p&gt;

&lt;h3&gt;Υλικά&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2 φύλα σφολιάτα.&lt;/li&gt;
&lt;li&gt;1 αυγό&lt;/li&gt;
&lt;li&gt;100 γραμμάρια φέτα&lt;/li&gt;
&lt;li&gt;1 τέταρτο κολοκύθας&lt;/li&gt;
&lt;li&gt;Κύμινο (τριμμένο)&lt;/li&gt;
&lt;li&gt;Μαύρο πιπέρι&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Παρασκευή&lt;/h3&gt;

&lt;p&gt;Ξεφλουδίζουμε την κολοκύθα, την κόβουμε σε κομμάτια και τη βάζουμε να βράσει μέχρι να μαλακώσει πέρα για πέρα.&lt;/p&gt;

&lt;p&gt;Εντωμεταξύ, λιώνουμε τη φέτα με ένα πιρούνι μαζί με το αυγό, το πιπέρι και το κύμινο. Όταν βράσει η κολοκύθα την αφήνουμε λίγο να κρυώσει, μη μας κόψει το αυγό και την αναμειγνύουμε κι αυτή μέσα στο υπόλοιπο μίγμα.&lt;/p&gt;

&lt;p&gt;Απλώνουμε πάνω στο ένα φύλο, σκεπάζουμε με το άλλο φύλο, βάζουμε στο φούρνο στους 200 βαθμούς για 20 λεπτά.&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Nov 2017 11:16:43 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/rumblings/2017/11/25/pumpkin-pie-ala-griega</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/rumblings/2017/11/25/pumpkin-pie-ala-griega</guid>
      </item>
    
      <item>
        <title>Rutema 2.0.0!</title>
        <description>&lt;p&gt;It has been over ten years since the initial version of &lt;a href=&quot;http://www.ampelofilosofies.gr/rutema&quot;&gt;rutema&lt;/a&gt; saw the light, nine since it hit 1.0, five since the last official update of the gem and a full two years since I rewrote the engine.&lt;/p&gt;

&lt;p&gt;Fifteen release candidate versions and - at long last - bugfixes and contributions by other people!&lt;/p&gt;

&lt;p&gt;There is only one thing to say about this code: It is stable. &lt;/p&gt;

&lt;p&gt;It has been filed down over the years, it has been in constant use for the entirety of its existence and it has been a tremendously useful tool in realizing highly complex test automation scenarios.&lt;/p&gt;

&lt;p&gt;Also: &lt;strong&gt;oh my god, it has been ten years!!!&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 23 Sep 2017 15:14:21 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2017/09/23/rutema-two-oh</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2017/09/23/rutema-two-oh</guid>
      </item>
    
  </channel>
</rss>