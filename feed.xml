<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ampelofilosofies</title>
    <description>Random comments on random subjects in random language</description>
    <link>http://www.ampelofilosofies.gr</link>
    <atom:link href="http://www.ampelofilosofies.gr/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>ForgetMeNot: Jenkins Pipeline Jobs polling SCM changes</title>
        <description>&lt;p&gt;It took me a disproportionate amount of time and significant reserves of google foo to figure this out, so it merits documentation.&lt;/p&gt;

&lt;h2&gt;The Problem&lt;/h2&gt;

&lt;p&gt;I use a setup that involves creating all jobs via JobDSL definitions and have several jobs leveraging the PipelineDSL.&lt;/p&gt;

&lt;p&gt;It was unclear how to tell the git which repo to poll, which credentials to use etc.&lt;/p&gt;

&lt;p&gt;Just a warning: none of the options to the scm trigger in JobDSL work for a pipeline job. &lt;/p&gt;

&lt;p&gt;You just define a plain, dumb scm poll in the frequency you require, for example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;triggers {
  scm 'H(3) * * * 1-5'
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;What works?&lt;/h2&gt;

&lt;p&gt;The rest of information is passed to git in the Pipeline definition.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;node(){
  git changelog: true, credentialsId: 'bla-bla-bla', poll: true, url: 'https://url.to.repo', branch: brnch  
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The critical part here is setting &lt;em&gt;poll&lt;/em&gt; to &lt;strong&gt;true&lt;/strong&gt;. The job will trigger, enter the pipeline and then setup polling for any future job invocations. I tend to set &lt;em&gt;changelog&lt;/em&gt; to &lt;strong&gt;true&lt;/strong&gt; as well, because if we&amp;#39;re going to pay the penalty (see further down) we might as well get as much as possible out of it.&lt;/p&gt;

&lt;h2&gt;Handicap&lt;/h2&gt;

&lt;p&gt;I find this approach problematic, since it requires us to have a workspace (so we need a node() context in the pipeline) and we need to clone the repo.&lt;/p&gt;

&lt;p&gt;In my case this is exarcebated by bad repository care practices (lots of binary data commited makes the repo way to large relative to it&amp;#39;s content). Also, I tend to structure pipelines with simple jobs (things like Build Module, Test Module, Package &amp;amp; Publish) that are then strung together as a pipeline and the composite jobs usually do not need a workspace. So this cloning is really pure overhead.&lt;/p&gt;

&lt;p&gt;If anyone knows how to get polling working without requiring a full clone, please have a go at the comments.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Mar 2017 13:14:44 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2017/03/05/forgetmenot-jenkins-pipeline-polling</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2017/03/05/forgetmenot-jenkins-pipeline-polling</guid>
      </item>
    
      <item>
        <title>Monitor CI nodes with Jenkins</title>
        <description>&lt;p&gt;My team and I have had a dreadful couple of weeks.&lt;/p&gt;

&lt;p&gt;Network issues, license issues, Windows issues, compiler issues, flip-floping test results etc., all of them piled one on top of the other and driving us nuts. With some of these issues we have to live with and compromise (I have a rant, a crazed, raving mad rant about companies forcing you to generate development licenses &lt;em&gt;every week&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;We also scaled out our CI infrastructure. Do not imagine anything huge, we went from 4 nodes running on 6-year old hardware to 16 nodes running on modern i5s, but that still means that we now have to keep an eye on 16 nodes instead of 4.&lt;/p&gt;

&lt;p&gt;The work never stops and we needed a health monitor for the nodes something quick, so we cobbled something together using the Jenkins Job &amp;amp; Pipeline DSLs.&lt;/p&gt;

&lt;h2&gt;What you need&lt;/h2&gt;

&lt;p&gt;Jenkins 2.x with the build-monitor-plugin plugin.&lt;/p&gt;

&lt;h2&gt;All of the nodes.&lt;/h2&gt;

&lt;p&gt;We have fixed CI nodes - none of that dynamic mumbo-jumbo with Docker or AWS. The reason is simple: &lt;/p&gt;

&lt;p&gt;We need Windows and we build embedded software and test on target.&lt;/p&gt;

&lt;p&gt;We just ask Jenkins to tell us how many nodes are registered and then create one job for each node, naming the job after the node:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//localhost:8080/computer/api/xml?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slaves&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//computer/displayName').getText()&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groovy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;XmlSlurper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt; 
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//the job definition - skipped for clarity, see below&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tried to use the Jenkins API (the hudson.model.* and jenkins.model.*) but quickly gave up because of major Groovy-Java dissonance and totally uninformative messages.&lt;/p&gt;

&lt;p&gt;So the code above queries the HTTP API - this would be more complicated if we had authentication turned on, but we don&amp;#39;t ;).&lt;/p&gt;

&lt;p&gt;The job definition is simple: Run every 3 minutes and take the node name as a parameter. It is also totally generic, pulling the pipeline definition off our repo.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;pipelineJob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Monitors&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Failure&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signifies&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abort&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;been&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;taken&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offline&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unstable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;means&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maintenance&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;details&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;logRotator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;daysToKeep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;triggers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*/3 * * * *'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stringParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'STATION'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'The station to monitor'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;definition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readFileFromWorkspace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jenkins/pipelines/monitor.groovy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only reason we instantiated one job for every node is for display purposes, which brings us to the view definition&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;buildMonitorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CI Health'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CI infrastructure status'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//localhost:8080/computer/api/xml?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slaves&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//computer/displayName').getText()&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groovy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;XmlSlurper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;jobs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above gives us a nice monitor view:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ci_health.png&quot; alt=&quot;CI Health Monitor&quot;&gt;&lt;/p&gt;

&lt;h2&gt;The interesting parts&lt;/h2&gt;

&lt;p&gt;We ended up doing quite a few things in this job.&lt;/p&gt;

&lt;p&gt;We check to see if a node is offline and if that was deliberate, we also check if the disk on the node is running full and then if the node is not busy we switch the context to within the node and start checking things.&lt;/p&gt;

&lt;p&gt;That last stage is the tricky part because it needs to be really, really fast, otherwise we run the risk of blocking executors while the team is working.&lt;/p&gt;

&lt;p&gt;The pipeline looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NonCPS&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;freeSpaceCheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;monitorData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;monitorData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hudson.node_monitors.DiskSpaceMonitor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;freeSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;freeSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6000000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NonCPS&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkIdle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodeData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;nodeData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;idle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isNodeIdle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Node State&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SUCCESS&quot;&lt;/span&gt;  
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080/computer/${env.STATION}/api/xml&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groovy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;XmlSlurper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'FAILED'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${env.BUILD_NUMBER}-offline&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;temporarilyOffline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ABORTED'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${env.BUILD_NUMBER}-parked&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;freeSpaceCheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;monitorData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;WARNING: Disk space is low!&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'UNSTABLE'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${env.BUILD_NUMBER}-nospace&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;isNodeIdle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkIdle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Check Node&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SUCCESS&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isNodeIdle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//this will run on the node if the node is not busy&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We subvert the meaning of the job stati a bit (as documented in the description of the job). This is so that we can adhere to &amp;quot;green means relax, yellow means work is coming your way, red means drop everything else and fix it&amp;quot;.&lt;/p&gt;

&lt;p&gt;We also use the build display name to hint at the reason for the status.&lt;/p&gt;

&lt;p&gt;Those @nonCPS methods are there so that Jenkins does not have a fit trying to serialize the XmlSlurper.&lt;/p&gt;

&lt;p&gt;It would have been less code and a lot more readable if I had managed to talk to the Java API, but wierdness happened and the HTTP API does the work.&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 13:14:44 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2017/03/04/monitor-ci-nodes-with-jenkins</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2017/03/04/monitor-ci-nodes-with-jenkins</guid>
      </item>
    
      <item>
        <title>ForgetMeNot: Jenkins test result aggregation in the Pipeline DSL</title>
        <description>&lt;p&gt;Took me awhile to figure this out. One more thing for the list of things that Jenkins makes unnecessarily complex.&lt;/p&gt;

&lt;h2&gt;The Problem&lt;/h2&gt;

&lt;p&gt;We have a pipeline job that starts a handful of other jobs - call them subjobs -  and we want to aggregate the test results of the subjobs in our pipeline.&lt;/p&gt;

&lt;h2&gt;The required list of extra plugins you need&lt;/h2&gt;

&lt;p&gt;To get this done I had to add the &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Copy+Artifact+Plugin&quot;&gt;copyartifact plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will also need one of JUnit/NUnit/xUnit depending on what your reports look like.&lt;/p&gt;

&lt;h2&gt;How to do it&lt;/h2&gt;

&lt;p&gt;Use archiveArtifact in the subjob to archive the test results. Somehting like &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;archiveArtifacts artifacts: 'results\\*.xml', fingerprint: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then in the job you do the aggregation make sure to keep the references to the subjobs. &lt;/p&gt;

&lt;p&gt;From the reference we then get the 
build number for each of the test jobs which we need in order to find the correct artifacts to copy.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;def test_jobs=[:]
def subjobs=[:] 
for(int i = 0; i &amp;lt; test_suites.size(); i++){ 
  def instanceNumber=i  
  subjobs[&quot;${env.BUILD_DISPLAY_NAME}-${instanceNumber}&quot;]={
    tj=build job: 'Test'
    test_jobs&amp;lt;&amp;lt;tj.getNumber()
  }
}
parallel subjobs 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another tricky thing that has to do with how Groovy scopes things: &lt;/p&gt;

&lt;p&gt;If &lt;code&gt;i&lt;/code&gt; is not assigned to a variable within the closure then you will only get one job in the subjobs map.&lt;/p&gt;

&lt;p&gt;Then, once the subjobs are finished we pick a node to have a workspace and grab the test reports.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;node(){
  for(int i = 0; i &amp;lt; test_jobs.size(); i++){
    selector = [$class: 'SpecificBuildSelector', 
                buildNumber: &quot;${test_jobs[i]}&quot;]
    step ([$class: 'CopyArtifact',
          projectName: 'Test',
          selector: selector])
  }
  //Your test results plugin here
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That selector trick I found in the &lt;a href=&quot;https://github.com/jenkinsci/blueocean-acceptance-test/blob/master/Jenkinsfile#L103&quot;&gt;blueocean sources&lt;/a&gt; (don&amp;#39;t even ask me how I arrived there)&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Feb 2017 16:19:44 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2017/02/22/forgetmenot-jenkins-aggregation</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2017/02/22/forgetmenot-jenkins-aggregation</guid>
      </item>
    
      <item>
        <title>There are no rules</title>
        <description>&lt;p&gt;A few years ago (at BaRuCo 2013) &lt;a href=&quot;https://twitter.com/sandimetz&quot;&gt;Sandi Metz&lt;/a&gt; held a talk about &lt;a href=&quot;https://www.youtube.com/watch?v=npOGOmkxuio&quot;&gt;rules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Afterwards at the party, a conversation ensued where I remember her mention that she put together the rules after years of having clients insisting on them. If I remember correctly she mentioned how she didn&amp;#39;t like formulating rules at all but everyone kept asking for a list until she gave up.&lt;/p&gt;

&lt;p&gt;At the time I accepted it as confirmation for my own bias against rules. But I gave up adding caveats and ifs and only-whens to the list of guidelines not long after that.&lt;/p&gt;

&lt;p&gt;For years, when presented with rules, alarms would go off in my head and the inner scream of &amp;quot;HOW DARE YOU! YOU DON&amp;#39;T GET TO TELL ME HOW TO DO MY JOB!!!&amp;quot; (three exclamation marks at least) would drown all other thoughts.&lt;/p&gt;

&lt;p&gt;A list of rules to follow blindly reeks of oversimplification. &lt;em&gt;I still believe that&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The older I get the more I like &amp;quot;rules&amp;quot; - quotes here because I break rules so often as to render the term non-sensical:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;They are a powerful communication medium, catch-phrases that stick to the mind&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The conundrum is that there is no set of rules to apply permanently.&lt;/p&gt;

&lt;p&gt;The perennial software developer answer to any question is &amp;quot;it depends&amp;quot; and that is probably the biggest truth in software development today.&lt;/p&gt;

&lt;p&gt;It depends on your team, the problem, the tools, the organizational structure and a multitude of other factors.&lt;/p&gt;

&lt;h2&gt;There are no rules&lt;/h2&gt;

&lt;p&gt;...but until we learn when to break which one without impacting our goals, a small set of simple to follow guidelines agreed by the team is invaluable as a communication baseline, a teaching medium and an onboarding resource.&lt;/p&gt;

&lt;h2&gt;There is a code of conduct&lt;/h2&gt;

&lt;p&gt;If you don&amp;#39;t call them rules, but collaboration guidelines instead, then you are obliged as a well-behaved team member to inform your peers when the guidelines are not followed and to justify your choice.&lt;/p&gt;

&lt;p&gt;Sandi&amp;#39;s &amp;quot;you can break the rule if your pair OKs it&amp;quot; is a nice guideline on how to do it.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Jan 2017 16:19:44 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2017/01/04/there-are-no-rules</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2017/01/04/there-are-no-rules</guid>
      </item>
    
      <item>
        <title>Windows 7 Update Hell</title>
        <description>&lt;h2&gt;Death by a thousand updates&lt;/h2&gt;

&lt;p&gt;I don&amp;#39;t know if you noticed, but Microsoft broke Windows Update back in April. I didn&amp;#39;t, at least not until it was October.&lt;/p&gt;

&lt;p&gt;Luckily by then the Internetz had found a solution. Not that it is an easy one, or an elegant one.&lt;/p&gt;

&lt;p&gt;It involves downloading 3 specific MS hotfixes. If you look around the net you will find a different set of hotfixes required, depending on when the posts where written.&lt;/p&gt;

&lt;p&gt;It seems this Windows Update thing broke, got patched, broke again, got patched again and then broke again between April and September, so here is the set of hotfixes that works as of December 2016. It might change in a few months.&lt;/p&gt;

&lt;p&gt;Also, it seems this is not your final solution if you want &lt;a href=&quot;http://www.infoworld.com/article/3099109/microsoft-windows/microsoft-yanks-buggy-speed-up-patch-kb-3161608-replaces-it-with-kb-3172605-and-3172614.html&quot;&gt;working Bluetooth on an Intel chipset&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Windows 7&lt;/h2&gt;

&lt;p&gt;But, it is EOL you will say. It is not available through OEMs you will say. To this I answer: Industry is sluggish, embedded development more so, regulated software development even more so. So we get to enjoy Win7 for a while longer.&lt;/p&gt;

&lt;p&gt;Also, anything after Win7 sucks big time as an embedded software development environment.&lt;/p&gt;

&lt;p&gt;The 100% CPU bug afflicts Win10 as well, but for my scenarios it suffices to use the anniversary edition to work around it.&lt;/p&gt;

&lt;h2&gt;The solution&lt;/h2&gt;

&lt;p&gt;You need &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/kb/3020369&quot;&gt;KB3020369&lt;/a&gt;: April 2015 rollup update. So that the convenience rollup update &lt;em&gt;can&lt;/em&gt; install.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/kb/3125574&quot;&gt;KB3125574&lt;/a&gt;: the April 2016 convenience rollup, which is what MS calls whatever should have been Win7 SP2, but cannot be called a service pack since it came out way after MS said it will not support Win7 anymore.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and finally&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/kb/3172605&quot;&gt;KB3172605&lt;/a&gt; which is the actual fix for the &amp;quot;My CPU is pegged to 100% load for days while looking for windows updates&amp;quot; problem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that you can attempt to re-enable Windows Update.&lt;/p&gt;

&lt;h2&gt;Automation Hell&lt;/h2&gt;

&lt;p&gt;I am a proponent of vanila OS installations, &lt;a href=&quot;software/2015/10/17/windows-installations-virtual-machines&quot;&gt;especially for Windows&lt;/a&gt;
and I have regular automated builds to produce fresh Vagrant baseboxes with Packer.&lt;/p&gt;

&lt;p&gt;Getting the procedure described here with Packer involved a lot of trial and error and a lot of time.&lt;/p&gt;

&lt;p&gt;Things I learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You cannot install offline updates with the windows-shell provisioner since it uses WinRM and on Windows7 the update agent (wusa.exe) does not have to correct access rights.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This meant that the update installers had to be executed locally within the VM. &lt;/p&gt;

&lt;h3&gt;First approach&lt;/h3&gt;

&lt;p&gt;Copy the installer in the VM (using the &lt;a href=&quot;https://www.packer.io/docs/provisioners/file.html&quot;&gt;&amp;#39;file&amp;#39;&lt;/a&gt; provisioner) and use &lt;a href=&quot;https://www.packer.io/docs/provisioners/shell-local.html&quot;&gt;&amp;#39;shell-local&amp;#39;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get &amp;#39;shell-local&amp;#39; to work you have to provide the shell executable (as it uses /bin/sh per default)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;shell-local&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wusa.exe MyUPDATE.msu /quiet /norestart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;execute_command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cmd.exe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/C&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{\{.Command\}}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately .msu installers can exit with a variety of non-zero exit codes, 3010 being the one that indicates a reboot is needed. This messes up things.&lt;/p&gt;

&lt;p&gt;Also, copying the large convenience rollup update with the &amp;#39;file&amp;#39; provisioner failed consistently for some reason (it&amp;#39;s a big 500MB file - the rest all copied over with no issues), resulting in a 0 bytes entry and no error on the packer side. &lt;/p&gt;

&lt;p&gt;So this didn&amp;#39;t work.&lt;/p&gt;

&lt;h3&gt;Second approach&lt;/h3&gt;

&lt;p&gt;It was more like the fifth try to be honest. Lots of dead ends.&lt;/p&gt;

&lt;p&gt;The one that worked:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the installer from within the VM.&lt;/li&gt;
&lt;li&gt;Create a schedule task to install it on logon.&lt;/li&gt;
&lt;li&gt;Reboot.&lt;/li&gt;
&lt;li&gt;Go into a loop till the hotfix shows up in the list of installed updates (or you timeout).&lt;/li&gt;
&lt;li&gt;Rinse and repeat.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kludgy, complicated and slow, but it works reliably.
The script I used to detect the hotfix is &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#it looks for HOTFIX_ID (KBxxxxx) in the list of installed hotfixes &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#and goes in a loop until it shows up or the counter runs out&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;:HOTFIX_ID
&lt;span class=&quot;nv&quot;&gt;$max_tries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;Int32]&lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;:HOTFIX_DETECT_TRIES
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$max_tries&lt;/span&gt; -eq 0&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$max_tries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;90
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; -lt &lt;span class=&quot;nv&quot;&gt;$max_tries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;get-hotfix -id &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; -EA SilentlyContinue&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
    &lt;span class=&quot;nb&quot;&gt;Start-Sleep &lt;/span&gt;5
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; -eq &lt;span class=&quot;nv&quot;&gt;$max_tries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Timed out waiting for &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; - tried &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; times&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and this is how it&amp;#39;s called from Packer:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;powershell&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;environment_vars&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HOTFIX_ID=KB3125574&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HOTFIX_DETECT_TRIES=240&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;script/detect-hotfix-install.ps1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Groundhog Day: Chef&lt;/h2&gt;

&lt;p&gt;Like I said, I like vanila OS installs and deal with VMs and bare metal installations. Also with some old installations that have been working non-stop for years. And since they are not internet facing, nobody really bothered to update them. Well, everyone who tried recently gave up and went home crying.&lt;/p&gt;

&lt;p&gt;So I can&amp;#39;t rely on a recently patched version or a freshly produced basebox all the time.&lt;/p&gt;

&lt;p&gt;Which means I needed to re-implement the above as a Chef recipe:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;msu_installers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;msu_installers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{})&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msu_installers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;reboot&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Restart Computer'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:nothing&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;msu_sequence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;msu_sequence&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,[])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;msu_sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msu_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msu_installers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msu_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;windev_cache_package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;save_as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;depot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'software_depot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;installer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;software_depot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'save_as'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ruby_block&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;installer_exists&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Installer &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; not found&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exist?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:run&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;powershell_script&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Install &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wusa.exe &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;save_as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; /quiet /norestart&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:run&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;not_if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;get-hotfix -id &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -EA SilentlyContinue&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;notifies&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:reboot_now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'reboot[Restart Computer]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:immediately&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The JSON with the attributes looks like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;msu_installers&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;KB3020369&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;URL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;save_as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Windows6.1-KB3020369-x64.msu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;KB3020369&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;KB3125574&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;URL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;save_as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;windows6.1-kb3125574-foo.msu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;KB3125574&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;KB3172605&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;URL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;save_as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Windows6.1-KB3172605-x64.msu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;KB3172605&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;msu_sequence&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;KB3020369&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;KB3125574&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;KB3172605&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use this you will need the &lt;a href=&quot;https://supermarket.chef.io/cookbooks/windev#readme&quot;&gt;windev cookbook&lt;/a&gt; and you have to also use the auto_chef recipe to handle reboots (if you use Chef without a Chef Server, like I do).&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Dec 2016 11:22:44 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2016/12/28/windows-update-hell</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2016/12/28/windows-update-hell</guid>
      </item>
    
      <item>
        <title>Workaround for Jenkins CLI authentication</title>
        <description>&lt;p&gt;Been trying to get Jenkins to do various nifty things automatically and it turns out it is possible, only the new 2.x series has authentication turned on by default and we somehow need to authenticate jenkins-cli to be able to do anything.&lt;/p&gt;

&lt;p&gt;This creates a chicken-or-egg problem, since we need jenkins-cli to create the credentials that will enable jenkins-cli to login in the first place. At least if we use the jenkins cookbook or until Jnekins gets a proper HTTP API for these things.&lt;/p&gt;

&lt;p&gt;And as of some recent version before 2.x jenkins-cli will not allow the use of passwords anymore. Sometimes I think people go out of their way to make automating things difficult.&lt;/p&gt;

&lt;p&gt;I chewed at the problem for several days and lots of different angles. At the moment the easiest solution seems to be to disable security for the duration of the setup. Fortunately with a bit of Nokogiri magic this is not a difficult problem.&lt;/p&gt;

&lt;h2&gt;How to turn off security&lt;/h2&gt;

&lt;p&gt;Find the Jenkins &lt;em&gt;config.xml&lt;/em&gt;, set the value of &lt;code&gt;useSecurity&lt;/code&gt; to false.&lt;/p&gt;

&lt;p&gt;Contrary to &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Disable+security&quot;&gt;the Jenkins wiki&lt;/a&gt; advice, you don&amp;#39;t really have to remove the &lt;code&gt;authorizationStrategy&lt;/code&gt; and &lt;code&gt;securityRealm&lt;/code&gt; elements. Leaving them be actually makes restoring the original state easier.&lt;/p&gt;

&lt;p&gt;You can save the following to a file (let&amp;#39;s say &lt;code&gt;security.rb&lt;/code&gt;) and drop it in the libraries/ directory of your cookbook.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nokogiri&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;jenkins_security&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_home&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;jenkins_config_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;config.xml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Could not find the Jenkins configuration file at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_home&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. The disable_security recipe needs to run *after* the jenkins-master default recipe.&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exist?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;jenkins_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;security_settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//hudson//useSecurity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:on&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;security_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:off&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;security_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;false&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Only :on and :off are valid state values&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jenkins_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The recipe that uses the above code is&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;chef_gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'nokogiri'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ruby_block&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'disable_security'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jenkins_security&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jenkins'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'master'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'home'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;notifies&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'service[jenkins]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:immediately&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:run&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The nice thing about this approach is that once we&amp;#39;re done with Jenkins we can reactivate security (just replace the &lt;code&gt;:off&lt;/code&gt; with &lt;code&gt;:on&lt;/code&gt; in the recipe code) and we&amp;#39;re back to the initial state.&lt;/p&gt;

&lt;h2&gt;Pitfalls&lt;/h2&gt;

&lt;p&gt;You will need to block and wait for Jenkins to boot up before including this. For a way to do this you can check &lt;a href=&quot;https://github.com/Zuehlke/cookbooks-jenkins-simple-app&quot;&gt;cookbooks-jenkins-simple-app&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 30 May 2016 12:22:44 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2016/05/30/jenkins-cli-authentication</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2016/05/30/jenkins-cli-authentication</guid>
      </item>
    
      <item>
        <title>Damn you Visual Studio</title>
        <description>&lt;p&gt;&lt;em&gt;I&amp;#39;m not being lazy, the bloody piece of shite is compiling&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today was a day of deep learning, which is to say that nothing, but absolutely nothing worked as it was supposed to and it took ages to figure out why.&lt;/p&gt;

&lt;p&gt;As of last Friday my project is maintaining two trunks of a rapidly diverging code base - one for the current generation of hardware designated support and master for whatever is coming next.&lt;/p&gt;

&lt;p&gt;Adapting our CI was as simple as cloning the build job pipeline and telling git to check out a different branch. And that worked for about 2 builds at which point the first gate keeper that checks the integration of device and host PC started failing for the support builds.&lt;/p&gt;

&lt;p&gt;The error came from our host tools, which are written in C# and it provoked a big, loud &amp;quot;WAT?&amp;quot; as per the initial &lt;a href=&quot;http://plasmasturm.org/log/6debug/&quot;&gt;stages of debugging&lt;/a&gt; since it was a &amp;quot;I can&amp;#39;t load type so-and-so in assembly so-and-so&amp;quot; for a type that was definitely nowhere to be found in the sources.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/wat.jpg&quot; alt=&quot;wat?!?&quot;&gt;&lt;/p&gt;

&lt;p&gt;Here I have to diverge and explain that we are exposing part of the C# .NET funtionality over COM for use in Ruby scripts and for that reason in the test stages the system registers a couple of assemblies using regasm.&lt;/p&gt;

&lt;p&gt;Now, the system includes 3 C/C++ compilers, python, tcl, ruby, a whole bunch of DSL generation steps in addition to the msbuild invocations so for convenience and speed the clean step is removing the directory where the build artifacts are saved.&lt;/p&gt;

&lt;p&gt;I am a big fan of out-of-band builds (builds that do not mix sources with artifacts) and the fast, permanent and - up until now - reliable clean function is one of my favorite features.&lt;/p&gt;

&lt;p&gt;Trust msbuild to find a way to work around this. So what happened?&lt;/p&gt;

&lt;h2&gt;Cause&lt;/h2&gt;

&lt;p&gt;The cuplrit is called &lt;strong&gt;IntermediateOutputPath&lt;/strong&gt; and is a setting in Visual Studio project files that tells Visual Studio where to place the object files created by it&amp;#39;s compiler before linking. It&amp;#39;s that obj directory that pops up whenever you press F7.&lt;/p&gt;

&lt;p&gt;There is no way to set this in the project properties as far as I know. You have to edit the .csproj file and add it, which is what we do (like I said &lt;em&gt;out-of-band&lt;/em&gt; builds).&lt;/p&gt;

&lt;p&gt;It seems that under certain circumstances (which I have not been able to recreate yet) Visual Studio takes it upon itself to change the value of this parameter.&lt;/p&gt;

&lt;p&gt;It then sets it to a random temporary directory using ENV[TEMP] as the basis and puts that value in the .csproj file which obviously gets commited.&lt;/p&gt;

&lt;p&gt;And this happened in an indeterminate point in the past before we ever had multiple trunks.&lt;/p&gt;

&lt;h2&gt;Effect&lt;/h2&gt;

&lt;p&gt;Switch now to the main build server who in the alleged security of out-of-band builds attempts to build both trunks.&lt;/p&gt;

&lt;p&gt;Given a team that commits rapidly on the master branch clearing technical debt and sparingly on the support branch, you will very quickly reach the point where the sources on the support branch are by definition older than the corresponding object files in said &amp;quot;temporary&amp;quot; directory.&lt;/p&gt;

&lt;p&gt;But msbuild doesn&amp;#39;t know that. It sees newer object files and hapilly goes &amp;quot;I don&amp;#39;t have to build this, hihi&amp;quot; and links some random piece of code for you. And since you&amp;#39;re an idiot and forgot to de-register the assembly before building any type mismatches are not reported by the linker. Hilarity ensues.&lt;/p&gt;

&lt;h2&gt;Lessons learned&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This is a fine example of the evils of shared state.&lt;/li&gt;
&lt;li&gt;Not one tool vendor has really thought about building things in parallel.&lt;/li&gt;
&lt;li&gt;Always do clean builds on your CI.

&lt;ul&gt;
&lt;li&gt;Containers are nice, but...Windows.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Never assume the tool knows better and never assume you cleaned up everything.&lt;/li&gt;
&lt;li&gt;Visual Studio is evil.&lt;/li&gt;
&lt;li&gt;There is always something you missed. Have multiple levels of testing.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 16 Feb 2016 14:02:44 +0100</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2016/02/16/damn-you-vs</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2016/02/16/damn-you-vs</guid>
      </item>
    
      <item>
        <title>Windows Installations & Virtual Machines</title>
        <description>&lt;p&gt;&lt;em&gt;This post was originally written in July 2014 and then lounged in the dusty, dark recesses of my disk because... Windows. The hindsight of a whole year of using the Packer/Vagrant/Chef workflow led to minor updates, which speaks for the applicability of the approach&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Automating Windows installations is hard!&lt;/p&gt;

&lt;p&gt;Maybe hard is not the right word. &amp;#39;Unecessarily complicated&amp;#39;, &amp;#39;obfuscated&amp;#39;, &amp;#39;frustrating&amp;#39; come to mind&lt;sup&gt;1&lt;/sup&gt;. Sometimes, for certain, not so stelarly engineered solutions the word &amp;#39;impossible&amp;#39; creeps around the corner.&lt;/p&gt;

&lt;p&gt;And yet things have never been better for anyone trying to solve the riddle. All the tools are there and while looking at the *ix solutions you wish for a lot of things (like a decent shell, or no registry, or a standardized way for installer parameters, or a package repository or...you get my drift) &amp;#39;impossible&amp;#39; has had to hide in some really obscure corners.&lt;/p&gt;

&lt;h2&gt;Installation drudgery&lt;/h2&gt;

&lt;p&gt;I can&amp;#39;t even begin to estimate the times I have installed Windows from scratch. It became tedious very, very fast but there was no release in sight for a long time.&lt;/p&gt;

&lt;p&gt;With the advent of desktop virtualization and laptops that can accomodate a couple of Windows VMs running concurrently I follow the practice of keeping one pristine Windows installation&lt;sup&gt;2&lt;/sup&gt; at hand and a bootstrap package of command files that install the latest &lt;a href=&quot;http://chefdk.com&quot;&gt;ChefDK&lt;/a&gt;, an SVN client and git for Windows.&lt;/p&gt;

&lt;p&gt;The workflow as it stands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy the VM&lt;/li&gt;
&lt;li&gt;Boot the VM and perform any outstanding updates (this includes Windows and the virtualization tools &amp;amp; drivers)&lt;/li&gt;
&lt;li&gt;Copy the bootstrap package over and run the command file&lt;/li&gt;
&lt;li&gt;Checkout/clone the repository with all my Windows recipes&lt;/li&gt;
&lt;li&gt;Run Chef to provision the VM&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Not enough (?)&lt;/h2&gt;

&lt;p&gt;VMs are bulky. With a dynamically growing disk a vanilla Windows VM ways in at about 20GB. Add to that the software for toolchains etc. and it grows very large indeed (my current C/C++ embedded environment weights in at 50GB).&lt;/p&gt;

&lt;p&gt;You can&amp;#39;t expect everyone to download it every time it changes so the case for immutable infrastructure when creating development environments is not very strong. Also, developers tend to have a lot of half-finished and ongoing work on disk which means you can&amp;#39;t really throw away the VM when updating, you have to do an incremental update for user friendliness sake.&lt;/p&gt;

&lt;p&gt;A properly configured Windows base box is smaller (about 5GB) and we can skip the time it takes to create it from an .iso, because, well, we don&amp;#39;t do it very often.&lt;/p&gt;

&lt;p&gt;Create the base box using &lt;a href=&quot;http://www.packer.io&quot;&gt;Packer&lt;/a&gt;, add a Vagrantfile to the repository and host the base box in a known location and we have the capability to recreate the development environment.&lt;/p&gt;

&lt;p&gt;How much goes into the base box in terms of software and configuration is your choice but vanilla installations work best, especially with Windows (you get the benefit of having a pristine registry database).&lt;/p&gt;

&lt;p&gt;Keep in mind that you have to update the base box regularly to avoid the massive Windows Update penalty when creating new VM instances. Automating the creation process with Packer is thankfully very easy and can be delegated to a CI/cron job.&lt;/p&gt;

&lt;p&gt;Everything else is done with Chef and a bit of powershell (to bootstrap Chef from Vagrant). To help with that we have a cookbook by the name of &lt;a href=&quot;https://github.com/Zuehlke/cookbook-windev&quot;&gt;windev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So the workflow becomes&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;vagrant up&lt;/li&gt;
&lt;li&gt;Run Chef to provision the VM&lt;/li&gt;
&lt;li&gt;Go back to 2. when necessary&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We still haven&amp;#39;t solved the performance problem. It takes a long time to start a VM and the traditional desktop hypervisors hog a lot of resources. Docker is not a viable solution because Windows, so we have a case of serious OS envy.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; After years of deliberation I am convinced that the Windows Registry is among the top 5 of  engineering solutions that on hindsight revealed themselves as colossal PITA mistakes. It may even occupy the top spot, but then, I&amp;#39;m biased.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt; Meaning just a vanilla installation with no additional software other than the latest Microsoft patches.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Oct 2015 14:02:44 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2015/10/17/windows-installations-virtual-machines</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2015/10/17/windows-installations-virtual-machines</guid>
      </item>
    
      <item>
        <title>Cars: To drive or not to drive?</title>
        <description>&lt;p&gt;I don&amp;#39;t own a car and on the rare occasions I need one, I rent. So I get to drive lots of different cars and most of them brand new. In my daily slog I don&amp;#39;t use a car, it&amp;#39;s trains, trains, trains. Wouldn&amp;#39;t use a car even if I owned one. Which in hindsight is probably why I enjoy driving so much.&lt;/p&gt;

&lt;p&gt;This summer I got to drive a lot in Greece and the UK. All the rentals came equiped with cruise control (for the curious: a Pegeuot 307, a Honda Jazz and a Ford Kuga) and initially the novelty of the feature was a fun game. Then I drove on the M62 in England and was glad for it because it made obeying the draconian speed limits simpler and easier. &lt;/p&gt;

&lt;p&gt;The empty expanse of a three lane motorway stretched infront of me and begged me to drop my foot on the gas pedal like a lead weight. Cruise control kept me in check. And then I got bored. Driving isn&amp;#39;t really fun on the motorway.&lt;/p&gt;

&lt;p&gt;I enjoy complex things and driving is one of the most complex activities we undertake: In a manual transmission car it requires the coordinated but independent actions of all four limbs while processing audio and visual sensory input and all of this moving at high speeds in a chaotic system. &lt;/p&gt;

&lt;p&gt;An automatic transmission takes the left foot out of the equation, cruise control does the same for the right (for certain motorway stretches - don&amp;#39;t ever use cruise control on the mountains of Greece, it won&amp;#39;t turn out OK). &lt;/p&gt;

&lt;p&gt;It&amp;#39;s an approximation of how it will feel in a self-driving car. Only it&amp;#39;s not, because you &amp;#39;re still on constant alert, actively scanning with peripheral vision, judging the relative speeds of cars in front, steering etc. All I can say is, bring me the self-driving car, I don&amp;#39;t like this stressful in-between state.&lt;/p&gt;

&lt;p&gt;I am all for self-driving cars, even considering the &lt;a href=&quot;https://medium.com/basic-income/self-driving-trucks-are-going-to-hit-us-like-a-human-driven-truck-b8507d9c5961&quot;&gt;downsides&lt;/a&gt;. The benefits are overwhelming.&lt;/p&gt;

&lt;p&gt;Imagine an electric self-driving car: It needs no transmission, no pedals, no steering wheel. It can be symmetric, doesn&amp;#39;t need to have a designated front or back. It&amp;#39;s going to be lighter and roomier, will move faster through roads with no traffic jams, consume less energy and have better active/passive safety than anything with a slightly sleepy, distracted driver.&lt;/p&gt;

&lt;p&gt;Driving should be consigned to a hobby, much like riding horses is. Riding horses is unarguably the more useful skill to have in a post-apocalyptic society but I find the complexity of driving appealing.&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Aug 2015 14:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/rumblings/2015/08/30/cars-to-drive-or-not-to-drive</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/rumblings/2015/08/30/cars-to-drive-or-not-to-drive</guid>
      </item>
    
      <item>
        <title>ForgetMeNot: Turn off Windows Compatibility Appraiser</title>
        <description>&lt;p&gt;One of the advantages of infrastructure as code is that we now have complete control of the states of a computer.&lt;/p&gt;

&lt;p&gt;This consequently means that I can measure performance between two known states and I only have to look at the difference between states to figure out what went wrong.&lt;/p&gt;

&lt;p&gt;Well, in theory. Microsoft and the Microsoft Updates keep pulling the carpet under your feet. &lt;/p&gt;

&lt;p&gt;In this case, one of the patch Tuesdays in February introduced KB 2952664 which adds the &amp;quot;Microsoft Compatibility Appraiser&amp;quot; to ostensibly ease transition to Windows 10. Unfortunately that drives up CPU usage and brings computers (and much worse, VMs) to their knees. &lt;/p&gt;

&lt;p&gt;The whole process is a collection of tasks running regularly, whether a user is logged on or not and more importantly whether you opt-in for the MS customer experience program or not.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s all &lt;a href=&quot;http://www.infoworld.com/article/2911609/operating-systems/kb-2952664-compatibility-update-for-win7-triggers-unexpected-daily-telemetry-run-may-be-snooping.html&quot;&gt;very fishy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Turns out VMWare has a &lt;a href=&quot;https://pubs.vmware.com/view-51/index.jsp?topic=%2Fcom.vmware.view.administration.doc%2FGUID-BE82165B-13BC-4FD9-A9CF-FBEF6343D98A.html&quot;&gt;knowledge base article&lt;/a&gt; for the tasks that need to be excised.&lt;/p&gt;

&lt;p&gt;The following commandlines solve (or at least appear to solve) the problem:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;schtasks /Delete /F /TN &quot;\Microsoft\Windows\Application Experience\AitAgent&quot;
schtasks /Delete /F /TN &quot;\Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser &quot;
schtasks /Delete /F /TN &quot;\Microsoft\Windows\Application Experience\ProgramDataUpdater&quot;
schtasks /Delete /F /TN &quot;\Microsoft\Windows\Customer Experience Improvement Program\Consolidator&quot;
schtasks /Delete /F /TN &quot;\Microsoft\Windows\Customer Experience Improvement Program\KernelCEIPTask&quot;
schtasks /Delete /F /TN &quot;\Microsoft\Windows\Customer Experience Improvement Program\Use CEIP&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These will go into a new &lt;a href=&quot;https://github.com/Zuehlke/cookbook-windev&quot;&gt;windev&lt;/a&gt; recipe for sure.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jul 2015 14:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2015/07/10/forgetmenot-turn-off-windows-compatibility-appraiser</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2015/07/10/forgetmenot-turn-off-windows-compatibility-appraiser</guid>
      </item>
    
  </channel>
</rss>