<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ampelofilosofies</title>
    <description>Random comments on random subjects in random language</description>
    <link>http://www.ampelofilosofies.gr</link>
    <atom:link href="http://www.ampelofilosofies.gr/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Building with rake: Introduction</title>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This is the introduction to a series of articles I&amp;#39;ve been meaning to write for a while now. I&amp;#39;ve been working with Ruby for the last 12 years now and I&amp;#39;ve never done Rails or - the occasional Sinatra app aside - web applications.&lt;/p&gt;

&lt;p&gt;So this series will serve as an example of what you can do with Ruby away from Rails and also help me clarify and organise my own knowledge. Code samples will go up on GitHub.&lt;/p&gt;

&lt;p&gt;So let&amp;#39;s start by creating a build system from scratch. To simplify the subject but still keep things interesting we will create a build system for a project in C that runs on the RX63N (just because I have one lying around)&lt;/p&gt;

&lt;h2&gt;The RX63N&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/rx63n.jpg&quot; alt=&quot;RX63N evaluation board&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is a nifty little evaluation board for the &lt;a href=&quot;http://www.glyn.de/Produkte/Mikrocontroller/RENESAS/RX63N-SUPPORT-Videos&quot;&gt;RX63N 32bit CPU by Renesas&lt;/a&gt;(link is in German). The RX63N has ethernet and USB capabilities baked in, as well as a whole host of other &amp;quot;embedded&amp;quot; stuff. For the acronym, soup you can look up SPI, Single-Wire, GPIO, PWM, EXTAL etc. &lt;/p&gt;

&lt;p&gt;I won&amp;#39;t really go into the guts of this little system because I won&amp;#39;t get to talk about Ruby at all. The idea is to take one of the example applications offered by Renesas and built it without the provided IDE while also talking about structuring C code and moving away from make&amp;#39;s legacy (I can hear the cries: &amp;quot;HERETIC! INFIDEL!&amp;quot;&amp;quot;)&lt;/p&gt;

&lt;p&gt;Moving away from make means we need a replacement for it, a DSL for building systems that can equal and surpass the capabilities offered by the most cryptical of build tools. Enter rake&lt;/p&gt;

&lt;h2&gt;Rake&lt;/h2&gt;

&lt;p&gt;Rake is an equivalent of make written in Ruby and well known to Rubyists. It&amp;#39;s used every day to run tests, perform database migrations etc.  It&amp;#39;s &amp;quot;task management&amp;quot; software, but let&amp;#39;s not confuse it with a TODO list app. At it&amp;#39;s core it&amp;#39;s dependency resolution software.&lt;/p&gt;

&lt;p&gt;At this point I will skip the introduction to rake and it&amp;#39;s capabilities (which I had written and I removed because it turned into another two articles) and assume you know the basics (read &lt;a href=&quot;http://martinfowler.com/articles/rake.html&quot;&gt;Martin Fowler&amp;#39;s article&lt;/a&gt; from way back in &amp;#39;05 and the &lt;a href=&quot;http://rake.rubyforge.org/&quot;&gt;documentation&lt;/a&gt; to get up to speed)&lt;/p&gt;

&lt;p&gt;Rake&amp;#39;s strong point is that it is a simple DSL on top of Ruby and that apart from the few primitives it defines everything else in your Rakefile (i.e. the equivalent to a Makefile) is Ruby code.&lt;/p&gt;

&lt;p&gt;I cannot even begin to describe what a difference this makes when trying to build stuff. Instead hopefully I will demostrate it over a long series of articles that are going to incrementally compose part of a complex system. &lt;/p&gt;

&lt;p&gt;The original &amp;quot;build system&amp;quot; whose structure and concepts are the basis for these articles is ~8K lines of Ruby. It turns out the term &amp;quot;build system&amp;quot; is not accurate anymore. &amp;quot;Total Development Environment Control&amp;quot; is a much more appropriate term. It has spawned a few articles in it&amp;#39;s day, mainly concerning Ruby performance under Windows and rake trivia.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/software/2011/05/10/ruby-performance-what-a-difference-the-compiler-makes&quot;&gt;Ruby Performance: What a difference the compiler makes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/software/2011/05/20/rake-performance-sh-im-working&quot;&gt;rake performance: sh...I&amp;#39;m working&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/software/2011/06/08/rake-performance-check-the-mirror&quot;&gt;rake performance: check the mirror&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/software/2011/08/09/script-performance&quot;&gt;Script performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/software/2012/01/13/rake-dynamic-prerequisites&quot;&gt;rake dynamic prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/software/2012/04/24/ruby-performance-improvements-on-windows&quot;&gt;Ruby performance improvements on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The time has come to extract the core of this system, the part that actually builds C applications and see how it holds up after three &amp;quot;incarnations&amp;quot;.&lt;/p&gt;

&lt;p&gt;So in the next few posts, while we run the RX63N through it&amp;#39;s paces, we&amp;#39;ll go through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Building C code with rake&lt;/li&gt;
&lt;li&gt;DRY Build Systems in rake and managing the Ruby code base.&lt;/li&gt;
&lt;li&gt;A structure for component-based embedded C systems&lt;/li&gt;
&lt;li&gt;Managing cross-platform compilation and multi-platform C code bases&lt;/li&gt;
&lt;li&gt;Getting free of the IDE while still being able to debug&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And to make matters more interesting I&amp;#39;ll do it on Windows but make sure it runs on Linux as well so that we can have as direct a comparison as possible. To that effect, instead of using the Renesas provided (and quite expensive) toolchain I&amp;#39;m going to use the &lt;a href=&quot;http://www.kpitgnutools.com/index.php&quot;&gt;KPIT GNU toolchain&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now all I need is a nifty name for the series!&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Oct 2013 01:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/10/22/building-with-rake-I</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/10/22/building-with-rake-I</guid>
      </item>
    
      <item>
        <title>Building a vagrant guest plugin for QNX</title>
        <description>&lt;p&gt;The yak shaving expedition continues...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/software/2013/10/18/qnx-vagrant&quot;&gt;Previously&lt;/a&gt; I set out to create a base box for QNX and naively expected to do a &lt;em&gt;vagrant up&lt;/em&gt; and have everything work. HA!&lt;/p&gt;

&lt;p&gt;Vagrant was very offended at my presumption and started going on about how it was impossible to recognise the OS I was trying to use.&lt;/p&gt;

&lt;p&gt;So I entered the magical world of vagrant &lt;a href=&quot;http://docs.vagrantup.com/v2/plugins/development-basics.html&quot;&gt;plugins&lt;/a&gt; and specifically &lt;a href=&quot;http://docs.vagrantup.com/v2/plugins/guests.html&quot;&gt;guest&lt;/a&gt; and &lt;a href=&quot;http://docs.vagrantup.com/v2/plugins/guest-capabilities.html&quot;&gt;guest capability&lt;/a&gt; plugins&lt;/p&gt;

&lt;p&gt;Let me start by saying that the vagrant API is beautifuly done. Simple, flexible and cleanly coded. The only downside, which is a result of this flexibility, is that you won&amp;#39;t ever get an exhaustive reference. You have to dive into the code!&lt;/p&gt;

&lt;p&gt;Now, to build a guest plugin there are four things that need to be defined:&lt;/p&gt;

&lt;h2&gt;Guest&lt;/h2&gt;

&lt;p&gt;The guest plugin needs it&amp;#39;s name and one method, detect? and looks like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;VagrantPlugins&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GuestQNX&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Guest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:guest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;detect?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;machine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;machine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;communicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;uname -s | grep QNX&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We did say that QNX is BSD-like, didn&amp;#39;t we?&lt;/p&gt;

&lt;h2&gt;Guest capabilities&lt;/h2&gt;

&lt;p&gt;With a bit of trial and error I figured out the minimum amount of capabilities that a guest plugin must have to survive booting and shutting down.&lt;/p&gt;

&lt;p&gt;These are &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/damphyr/vagrant-qnx/blob/master/vagrant-guest-qnx/lib/qnx/vagrant/cap/configure_networks.rb&quot;&gt;configure_networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/damphyr/vagrant-qnx/blob/master/vagrant-guest-qnx/lib/qnx/vagrant/cap/halt.rb&quot;&gt;halt&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I added &lt;a href=&quot;https://github.com/damphyr/vagrant-qnx/blob/master/vagrant-guest-qnx/lib/qnx/vagrant/cap/change_hostname.rb&quot;&gt;change_hostname&lt;/a&gt; just because it was easy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instead of listing here the implementation code and make this post miles long with copy-paste-able information why don&amp;#39;t you head on to &lt;a href=&quot;http://https://github.com/damphyr/vagrant-qnx/tree/master/vagrant-guest-qnx&quot;&gt;github&lt;/a&gt; and browse at leisure?&lt;/p&gt;

&lt;h2&gt;What took you so long?&lt;/h2&gt;

&lt;p&gt;So a few things that I had to get right for this plugin to work.&lt;/p&gt;

&lt;h3&gt;Gem structure&lt;/h3&gt;

&lt;p&gt;I&amp;#39;m not really sure, but a file named exactly like your plugin (in this case vagrant-guest-qnx.rb) at the top of your gem&amp;#39;s structure seems to be what vagrant expects. Didn&amp;#39;t actually see it documented anywhere but I browsed several 3rd party plugins and copied the structure from vagrant-berkshelf.&lt;/p&gt;

&lt;p&gt;I lifted the handy loader guard there as well:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt; 
 &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;vagrant&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LoadError&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;The Vagrant Guest QNX plugin must be run within vagrant&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So this code won&amp;#39;t give you ugly stacktraces by chance.&lt;/p&gt;

&lt;h3&gt;The shell&lt;/h3&gt;

&lt;p&gt;This actually cost quite a bit of time. Vagrant generally has awesome logging, very detailed, but in this case it kept exiting with &amp;quot;no error message&amp;quot; so I had to dig in and use the magical powers of sprinkled puts. Turns out all machine.communicate.execute calls were returning exit status 126.&lt;/p&gt;

&lt;p&gt;Now for all you youngsters out there, 126 and 127 are usually shell code for &amp;quot;bloody hell, I can&amp;#39;t find what you want me to run&amp;quot;. And as it turns out, when communicating over ssh vagrant defaults to running everything with bash.&lt;/p&gt;

&lt;p&gt;Unfortunately bash is not available on stock QNX which uses ksh and links it to /bin/sh. So we need &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sh&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;in the Vagrantfile.&lt;/p&gt;

&lt;h3&gt;Shared folders&lt;/h3&gt;

&lt;p&gt;There are no VMWare Tools or Guest Additions for QNX. I don&amp;#39;t expect there will ever be. Yet Vagrant tries to establish a share between host and the VM and (in by now typical fashion) ends up hanging forever. So one more addition to the Vagrantfile is needed&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:disabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that&amp;#39;s it!&lt;/p&gt;

&lt;h2&gt;Tadaaa!&lt;/h2&gt;

&lt;p&gt;This is the bare minimum Vagrantfile needed to operate the base box you created by faithfully following &lt;a href=&quot;software/2013/10/18/qnx-vagrant&quot;&gt;my instructions&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Vagrantfile API/syntax version. Don&amp;#39;t touch unless you know what you&amp;#39;re doing!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;qnx65&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;qnx65sp1.box&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sh&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:disabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will need to install the vagrant-guest-qnx plugin (yes, it&amp;#39;s up on rubygems)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant plugin install vagrant-guest-qnx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are also a few constraints on the QNX VM:&lt;/p&gt;

&lt;p&gt;Because there is no sudo in the stock VM everything is done with su. For that reason the default no-password setting for root is still there. For the purposes of this yak shaving expedition that is more than enough. There is a sudo package for QNX and if by some miracle someone is interested, a pull request will be very welcome.&lt;/p&gt;

&lt;p&gt;Halting does not shutdown very fast. Although shutdown is performed, because there are no VM extensions the VM is still listed as running. So you have to wait for the forced shutdown. Not very nice but good enough.&lt;/p&gt;

&lt;p&gt;I now declare this yak shaved!&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Oct 2013 01:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/10/19/vagrant-guest-qnx</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/10/19/vagrant-guest-qnx</guid>
      </item>
    
      <item>
        <title>Vagrant with QNX Neutrino</title>
        <description>&lt;p&gt;&lt;em&gt;If you don&amp;#39;t know what QNX is don&amp;#39;t be scared, but if you don&amp;#39;t know what vagrant is this post is probably not for you :) &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Most of my career I have lamented not being able to use the best and most exciting tools because they just won&amp;#39;t work for whatever I have to get running at the time.&lt;/p&gt;

&lt;p&gt;Working with Windows you learn very fast to not expect much comfort, or support, or sane functioning command line interfaces for that matter. But I love edge cases, they represent a chalenge.&lt;/p&gt;

&lt;p&gt;So for the past week or so I have been putting together a setup for QNX Neutrino 6.5 machines.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.qnx.com/products/neutrino-rtos/neutrino-rtos.html&quot;&gt;QNX Neutrino&lt;/a&gt; is a real time operating system offered by QNX Software Systems which apparently belongs to RIM now. It&amp;#39;s a nifty microkernel RTOS, very Unix-like, more BSD than Linux in some ways and you can add all kinds of open source goodies to it.&lt;/p&gt;

&lt;p&gt;QNX is also very kind and offers a VMWare VM with the latest version of the OS. For the task at hand that was a godsend. So I made a few copies and started experimenting with the setup until it was done. &lt;/p&gt;

&lt;p&gt;And then the yak shaving started.&lt;/p&gt;

&lt;p&gt;See, every time I made a mistake I just deleted the VM, made another copy from the QNX master and continued the work. Sounds familiar? &lt;/p&gt;

&lt;p&gt;It&amp;#39;s more or less the vagrant work flow: Define your VM, do &lt;em&gt;vagrant up&lt;/em&gt; to start it, do the work with &lt;em&gt;vagrant ssh&lt;/em&gt; and when you&amp;#39;re finished &lt;em&gt;vagrant halt&lt;/em&gt; or &lt;em&gt;vagrant destroy&lt;/em&gt; if you went too far. The idea was to use a shell provisioning setup and easily test the setup scripts.&lt;/p&gt;

&lt;p&gt;How hard can it be to build a vagrant basebox for QNX? Considering it&amp;#39;s 23:00 and I started this at around 19:00 I would not say it&amp;#39;s easy.&lt;/p&gt;

&lt;h2&gt;Creating the basebox&lt;/h2&gt;

&lt;p&gt;The QNX VM came in VMWare format, I have a VM Workstation license and there is a (commercial) vagrant plugin for VMWare which I promptly acquired. I did not want to go through the trouble of converting the QNX VM from VMWare to VirtualBox just in case the yak became a yak herd. &lt;/p&gt;

&lt;p&gt;Before we package the whole thing there are a few things that need to be done on the QNX VM to allow vagrant to work with it. Everything listed is run as root.&lt;/p&gt;

&lt;h3&gt;Setup sshd&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/sh&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#setup ssh access &lt;/span&gt;
random -t
&lt;span class=&quot;c&quot;&gt;#use emtpy passphrases&lt;/span&gt;
ssh-keygen -t rsa -f /etc/ssh/ssh_host_key -b 2048
ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key
ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key
&lt;span class=&quot;c&quot;&gt;#and start the server&lt;/span&gt;
/usr/sbin/sshd&amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also, edit /etc/rc.d/rc.local and add the line &lt;em&gt;/usr/sbin/sshd&amp;amp;&lt;/em&gt; at the end so that sshd starts when the machine reboots.&lt;/p&gt;

&lt;h3&gt;Setup the vagrant user&lt;/h3&gt;

&lt;p&gt;I really dislike this because I have not found a way to automate it further. You need to go through the passwd questions manually.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#Accept default values and use vagrant as the password&lt;/span&gt;
passwd vagrant
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After this you need to add &amp;#39;users:x:100:&amp;#39; at the end of /etc/group&lt;/p&gt;

&lt;h3&gt;Passwordless ssh access&lt;/h3&gt;

&lt;p&gt;Get the &lt;a href=&quot;https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub&quot;&gt;vagrant insecure public key&lt;/a&gt; and copy it into /home/vagrant/.ssh/authorized_keys. Then to make sure do the following&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;chown -R vagrant:users /home/vagrant/.ssh
chmod -R 700 /home/vagrant/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the permissions are not set corretly openSSH will not login succesfully (and you will not know why!)&lt;/p&gt;

&lt;h3&gt;Actually create the base box&lt;/h3&gt;

&lt;p&gt;The basebox format is actually very basic: Whatever VM files your provider requires to start the VM plus a metadata.json file with the following content:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;provider:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;vmware_workstation&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Values that are valid at the time of writing are &amp;quot;vmware&lt;em&gt;workstation&amp;quot;, &amp;quot;vmware&lt;/em&gt;fusion&amp;quot; and &amp;quot;virtualbox&amp;quot;.&lt;/p&gt;

&lt;p&gt;For VMWare VMs the following should do the trick when run in the VMs directory.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;tar cvf qnx65.box *.vmdk *.vmx *.vmxf *.nvram metadata.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(add the .json file yourself :) )&lt;/p&gt;

&lt;h2&gt;Enter Vagrant&lt;/h2&gt;

&lt;p&gt;So we do the &lt;em&gt;vagrant init&lt;/em&gt; and edit the Vagrantfile&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;qnx65&amp;quot;&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;qnx65.box&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#No real URL, the basebox was just in the same directory&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first &lt;em&gt;vagrant up&lt;/em&gt; needs to specify the provider otherwise vagrant defaults to Virtualbox&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant up --provider vmware_workstation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, if you did not setup ssh correctly then vagrant is going to hang with &amp;quot;Waiting for VM to boot. This can take a few minutes&amp;quot;. This can be easily ascertained if you set the environment variable VAGRANT_LOG=debug and watch how vagrant repeatedly tries to connect and fails miserably never giving up. Go back and set those permissions...&lt;/p&gt;

&lt;p&gt;If you have setup ssh correctly then you&amp;#39;re going to get a &amp;quot;The guest operating system of the machine could not be detected!&amp;quot;. So much for Unix-like. &lt;/p&gt;

&lt;p&gt;Fun fact: If ssh is not correctly setup and &lt;em&gt;vagrant up&lt;/em&gt; hangs, then you can control-C and then try &lt;em&gt;vagrant halt&lt;/em&gt;. After an inordinate amount of time the VM is going to  shutdown. If ssh does work then &lt;em&gt;vagrant halt&lt;/em&gt; will die horribly complaining that it cannot recognise the OS.&lt;/p&gt;

&lt;p&gt;Which means that there&amp;#39;s going to be a continuation to this adventure, where we dwell into the creation of a vagrant guest plugin. This yak is not yet completely shaved.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There&amp;#39;s a &lt;a href=&quot;/software/2013/10/18/vagrant-guest-qnx&quot;&gt;follow up post&lt;/a&gt; with the QNX guest plugin&lt;/em&gt; &lt;/p&gt;
</description>
        <pubDate>Fri, 18 Oct 2013 01:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/10/18/qnx-vagrant</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/10/18/qnx-vagrant</guid>
      </item>
    
      <item>
        <title>ForgetMeNot:  Maintaining a cache for local bundler installs</title>
        <description>&lt;p&gt;Very often I find myself needing to install a certain set of gems without access to rubygems.org or sometimes without any network access.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt; allows you perform bundle install from a cache. All you need to do is put all your gems in a vendor/cache directory where your Gemfile is and bundler will look in there if you call it with --local:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;bundle install --local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The really neat trick is that bundler will always update the cache if the vendor/cache directory is present. So doing a simple &lt;em&gt;bundle install&lt;/em&gt; with an empty vendor/cache will net you an up-to-date cache you can take with you offline.&lt;/p&gt;

&lt;p&gt;My typical use case for this is to use a Gemfile to describe my system&amp;#39;s gems (in really complicated cases there might be a couple of Gemfiles), add the vendor/cache directory, perform bundle install and commit everything but the Gemfile.lock file. &lt;/p&gt;

&lt;p&gt;In the developer VM then the environment:update task will perform a local bundle install. This way we have easy and consistent gem updates across the whole team.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Oct 2013 11:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/10/14/local-bundler-installs</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/10/14/local-bundler-installs</guid>
      </item>
    
      <item>
        <title>ForgetMeNot:  Setting up SSH keys for Capistrano on Windows</title>
        <description>&lt;p&gt;New project, old problems.&lt;/p&gt;

&lt;p&gt;Getting familiar with the 3.0 version of Capistrano (the guys deserve praise for adopting the Rake DSL) and immediately I stumbled on the old &amp;quot;SSH passwordless logins won&amp;#39;t work on Windows&amp;quot; problem.  &lt;/p&gt;

&lt;p&gt;It&amp;#39;s a myth, but you have to fumble a bit till it can work. Did this 4 or 5 years ago (and it was slightly more work) and had to do it again this week, so here&amp;#39;s a forgetmenot on how to get Capistrano 3.x to use SSH keys for passwordless login on Windows7.&lt;/p&gt;

&lt;h3&gt;Generate your keys&lt;/h3&gt;

&lt;p&gt;No reason to go through it (which saves me like half a dozen steps from this list), but if you&amp;#39;re on Windows and you use puttygen please note that you will need to export the keys in OpenSSH format and copy the &lt;em&gt;exported&lt;/em&gt; public key in the authorized_keys file on the server side.&lt;/p&gt;

&lt;h3&gt;Copy the OpenSSH format key in C:\Users\your_username\.ssh&lt;/h3&gt;

&lt;p&gt;Now, in the *ix world keys and configuration are expected in ~/.ssh by default. Where you keep them on Windows doesn&amp;#39;t really matter, the  C:\Users\your_username\.ssh is just for conceptual consistency.&lt;/p&gt;

&lt;h3&gt;Tell Capistrano where to find the keys&lt;/h3&gt;

&lt;p&gt;The default value for key location in Capistrano is the *ixy one (doh!) so on Windows you need to go the extra mile.&lt;/p&gt;

&lt;p&gt;Now choosing C:\Users\your_username\.ssh gives us an advantage: Your keys are now in %USERPROFILE%\.ssh which means we can use the environment and get multiple user support for free. So in your stage deployment configuration set the Capistrano SSH options as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ssh_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;USERPROFILE&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.ssh/key.id_rsa&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;do substitute key.id_rsa with whatever filename your keys are stored in plz ;)&lt;/p&gt;

&lt;p&gt;Also depending on the server setup there might be a :forward_agent option there or not, but if you&amp;#39;re doing :forward_agent magic with the server you don&amp;#39;t need me to tell you how to setup your ssh options.&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Sep 2013 11:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/09/27/capistrano-windows-ssh</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/09/27/capistrano-windows-ssh</guid>
      </item>
    
      <item>
        <title>ForgetMeNot: SublimeText, jekyll and rake</title>
        <description>&lt;p&gt;&lt;em&gt;One more in the series of let-me-jot-this-down-cause-I-forget-easily articles&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the blog&amp;#39;s hiatus time I managed to switch from Textmate to SublimeText.&lt;/p&gt;

&lt;p&gt;The reason for switching has to do with SublimeText&amp;#39;s availability on all platforms I work with (namely I can get it to work on Windows). I&amp;#39;ve come to really like this editor with it&amp;#39;s simple JSON configuration and the lightning fast search facilities it offers. And I find increasingly annoying the need to switch outside the editor to perform tasks on the console.&lt;/p&gt;

&lt;p&gt;Luckily SublimeText has a nice and simple (again JSON based) batch execution system (called a Build System). Instead of duplicating knowledge I myself have found somewhere else, go check &lt;a href=&quot;http://addyosmani.com/blog/custom-sublime-text-build-systems-for-popular-tools-and-languages/&quot;&gt;this article by Addy Osmani&lt;/a&gt; which explains things very well.&lt;/p&gt;

&lt;p&gt;Now, switching the blog to jekyll also means I spent a lot more time within SublimeText when I write blogs. In typically lazy fashion I switched to the terminal for &lt;em&gt;jekyll build&lt;/em&gt;.  This got old very fast, so I was looking for a way to get a build system to work.&lt;/p&gt;

&lt;p&gt;The first thing was to call jekyll build directly, which went south pretty fast since I use rvm. The default OS X Ruby installation has actually never been used on my current machine.&lt;/p&gt;

&lt;p&gt;Using Addy&amp;#39;s article I figured out how to set the environment to set the rvm path. Now, instead of using &lt;em&gt;rvm-auto-ruby&lt;/em&gt; I just set the rvm default to the ruby version I use for my personal projects. All other installations don&amp;#39;t have the jekyll gem anyway.&lt;/p&gt;

&lt;p&gt;And instead of creating a build system for jekyll I just created a rakefile that calls &lt;em&gt;jekyll build&lt;/em&gt; and used the following as a build system&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;env&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${HOME}/.rvm/bin:${PATH}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;LC_CTYPE&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rake&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;file_regex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;^(...*?):([0-9]*):?([0-9]*)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That &lt;em&gt;&amp;quot;LC_CTYPE&amp;quot;:&amp;quot;UTF-8&amp;quot;&lt;/em&gt; is crucial, especially with the various greek, german and spanish UTF-8 characters loose on this blog. Jekyll chokes very fast (article number 3 to be exact) if it&amp;#39;s not set.&lt;/p&gt;

&lt;p&gt;The beauty of it is that the standard Ruby regex for errors still works and stacktraces are clickable and open the correct file within the editor. Sweet!&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Sep 2013 14:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/09/19/forgetmenot-sublime-jekyll-rake</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/09/19/forgetmenot-sublime-jekyll-rake</guid>
      </item>
    
      <item>
        <title>Baruco 2013</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/icanseethesea.jpg&quot; alt=&quot;I can see the sea&quot;&gt; Baruco is my excuse for the yearly pilgrimage to Barcelona.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s always a great pleasure coming back and the conference program is excellent, ram-packed with really really good talks. &lt;/p&gt;

&lt;p&gt;Truthfully, it&amp;#39;s just sheer pleasure to be able to sit back and watch a few talks without having to get up and run to prepare the next speaker ;).&lt;/p&gt;

&lt;p&gt;The organisation is very good and having gone through the ordeal with the EuRuKo team I&amp;#39;ll just  ignore any small faux-pas and smile. Kudos to the team for a job (very) well done. And guys...nobody expects the Wi-Fi to work.&lt;/p&gt;

&lt;p&gt;Matz, Sandi Metz, Katrina Owen, Avdi Grimm, Chris Kelly, Matt Wynne...ok, I won&amp;#39;t list the whole line up. The talks were great, the discussions in the breaks and the party even better and getting to meet up with old friends and acquaintances is...priceless.&lt;/p&gt;

&lt;p&gt;One thing I would have done differently (well, we did do differently at EuRuKo) would be to stretch the intervals a bit more, to give people more time to talk between talks. But it&amp;#39;s a delicate balance and the chosen format puts more talks on offer which is also great.&lt;/p&gt;

&lt;p&gt;I  managed to squeeze a lightning talk (I even have &lt;a href=&quot;/images/DevopsInTheRealWorld.pdf&quot;&gt;slides&lt;/a&gt; for it) on the two principles a team needs to follow when setting up it&amp;#39;s project development environment.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s two talks I would add to the show-to-every-one-because-it-explains-things-better-than-you-ever-will category. These are Sandi Metz&amp;#39;s &amp;quot;Rules&amp;quot; and Corey Haine&amp;#39;s &amp;quot;Design Patterns And The Proper Cultivation Thereof&amp;quot;. &lt;/p&gt;

&lt;p&gt;For sheer win-win in entertainment and knowledge I&amp;#39;ll push Katrina Owen&amp;#39;s &amp;quot;Here be Dragons&amp;quot; and to start a spirited discussion I&amp;#39;ll just show you Reg Braithwaite&amp;#39;s &amp;quot;What Developing With Ruby Can Teach Us About Developing Ruby&amp;quot;.&lt;/p&gt;

&lt;p&gt;If an outsider ever drops in for a visit at a Ruby conference he might get the impression that Rubyists keep patting themselves on the back and congratulating themselves on what a great, friendly and welcoming community they have. And he might leave with a slight &amp;quot;puff, them Rubyists think too much off themselves&amp;quot;.
That would be a mistake. The community is this language&amp;#39;s strongest feature. The people are approachable, open minded, hard working and knowledgable.
They will go out of their way to welcome new members and are generous with their time and knowledge.&lt;/p&gt;

&lt;p&gt;Every Ruby conference I have been to has been a pleasure and an inspiration mainly because of the people attending and Baruco was no exception. It was rather a very nice confirmation of the rule :).&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2013 14:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/software/2013/09/18/baruco2013</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/software/2013/09/18/baruco2013</guid>
      </item>
    
      <item>
        <title>(Gender)Diversity...oh my!</title>
        <description>&lt;p&gt;Diversity is a huge subject and doesn&amp;#39;t just cover gender or racial colour differentiations. European events tend to be extremely diverse on a different level than the current diversity discussion. We are fond of saying that you can drive a hundred miles in Europe and you will cross 6 countries. &lt;/p&gt;

&lt;p&gt;We don&amp;#39;t actually have an accurate count of the languages spoken at EuRuKo or the countries of origin for the delegates (but in my 5yr old son&amp;#39;s school the count stands at 28). &lt;/p&gt;

&lt;p&gt;We know that there were participants from every inhabited continent on this planet (-1 if you count Antarctica in that set) and from a questionnaire that only about a quarter of the delegates filled-in we have a listing of 24 different countries. Having invited people from countries that are missing from that list (Japan, Brasil and France come to mind) we can guarantee that it&amp;#39;s not complete.&lt;/p&gt;

&lt;p&gt;This post is explicitly concentrated on the issue of gender diversity and the goals the EuRuKo committee had set about it. It&amp;#39;s also my own personal view on the subject with the benefit of a couple of months of distance to the conference.&lt;/p&gt;

&lt;p&gt;EuRuKo ended up with an all male lineup. So typically we actually failed on one of the goals set from the beginning.&lt;/p&gt;

&lt;p&gt;Personally, I&amp;#39;m stumped about what more we could have done. Let&amp;#39;s go through the list once more:&lt;/p&gt;

&lt;p&gt;We went out and invited female speakers. They declined, each for their own very good reasons (sorry guys, but except for Matz, you were all &amp;quot;second choice material&amp;quot; ;) ). In hindsight I am really happy they couldn&amp;#39;t come and end up as a lonesome diversity token.&lt;/p&gt;

&lt;p&gt;We set a &lt;a href=&quot;http://euruko2013.org/codeofconduct/&quot;&gt;code of conduct&lt;/a&gt;, designed to keep racuous, young, white males in check (aaaand I&amp;#39;m done stereotyping).&lt;/p&gt;

&lt;p&gt;Then we came up with a CfP process with a blind selection phase aiming to encourage submissions by everyone. And we went completely nuts trying to promote it. Devchix, RailsGirls, every ruby group list we could find, you name it, it got an email (or more) from us. I&amp;#39;m surprised that we didn&amp;#39;t get blacklisted as major geek spammers.&lt;/p&gt;

&lt;p&gt;There were 91 talk proposals and all kinds of metrics that tell you that the whole process stimulated interest and created discussions and participation from the community. And when we pulled back the curtains just one - a single one! - was submitted by a woman!&lt;/p&gt;

&lt;p&gt;Dammit ladies, you didn&amp;#39;t even give us a chance! Submit a couple of talks, let the community show it&amp;#39;s bias...or not. &lt;/p&gt;

&lt;p&gt;In the aftermath of the CfP there were a lot of discussions about the reasons for the lack of female participation.&lt;/p&gt;

&lt;p&gt;In one of those &lt;a href=&quot;https://twitter.com/ashedryden&quot;&gt;@ashedryden&lt;/a&gt; summarized for me the following points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have they accepted women speakers before?&lt;/li&gt;
&lt;li&gt;are they interested in having women speakers?&lt;/li&gt;
&lt;li&gt;how involved are they (conference itself and its organizers) with groups that support women in technology?&lt;/li&gt;
&lt;li&gt;do I know people that are attending, speaking, or organizing?&lt;/li&gt;
&lt;li&gt;can I afford to go if the conference doesn&amp;#39;t cover anything for speakers?&lt;/li&gt;
&lt;li&gt;will it be a safe place for me to present?&lt;/li&gt;
&lt;li&gt;will the venue and location be a safe place for me to travel alone?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The answer to every one of those points (except for 2 were it&amp;#39;s a crystal clear yes) is complicated by the nature of EuRuKo and how it is organized. &lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say that the organizers were an unknown quantity and Greece&amp;#39;s miniscule Ruby community is busy drumming up support for the community in general within a framework of complete abandonement from any official source.&lt;/p&gt;

&lt;p&gt;Cost was also a factor. Not for the conference per se, which probably is the cheapest conference of that caliber that you will ever attend, but because Athens is on the ass end of flight connections and a tourist destination at the end of June, which makes getting there...expensive.&lt;/p&gt;

&lt;p&gt;There was an effort to enable at least the speakers to save money. Some things (like the &lt;a href=&quot;http://www.google.com/jobs/students/proscho/scholarships/emea/travelgrants/&quot;&gt;Google female scientists EMEA grant&lt;/a&gt;) did not pan out, others (like offering sponsor deals for companies that payed their employee travelling expenses) worked really well.&lt;/p&gt;

&lt;p&gt;The one thing we failed to address explicitly, because of our own bias, was safety. We live, work and move around in Athens and by any measure or metric Athens is way safer than any big US city and safer than many big European cities. And I mean that in the walk-alone-on-the-street-in-the-middle-of-the-night sense. But safer does not mean safe.&lt;/p&gt;

&lt;p&gt;We had a doctor on standby and there was security personel in the venue, but these are general measures meant for everyone.&lt;/p&gt;

&lt;p&gt;Greece in general and Athens in particular has made the news in very sensational ways the last few years. Our venue selection was explicitly influenced by the wish to avoid having our delegates move in the &amp;quot;demonstration&amp;quot; zone of Athens and thus risk - there is no reason to hide it - having to treat tear-gas victims. That would have put a huge damper on the whole conference!  &lt;/p&gt;

&lt;p&gt;Still any reasonably well informed and intelligent person (which overlaps quite a bit with our target audience) has been inundated in the past couple of years by dark and ugly news from the &amp;quot;birthplace of Democracy&amp;quot; and to work against that bias was difficult from the beginning. Maybe targeting it specifically would have put female participants more at ease, maybe it would have scared more people away.  Either way it was the one thing we did not address in public.&lt;/p&gt;

&lt;p&gt;At the end we had less than 10% female participation at the event, a point Kiev should improve on in 2014. &lt;/p&gt;

&lt;p&gt;Still, there&amp;#39;s about 400 more people with fresh EuRuKo Athens experience in the community and I bet they will all tell you that you should have been there and that you shouldn&amp;#39;t miss the next one.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Sep 2013 17:00:00 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/rumblings/2013/09/15/diversity-oh-my</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/rumblings/2013/09/15/diversity-oh-my</guid>
      </item>
    
      <item>
        <title>Recruiter fail</title>
        <description>&lt;p&gt;The following was sent to the info euruko account &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;Hi EuRuKo,

I am &amp;lt;em&amp;gt;redacted&amp;lt;/em&amp;gt; human resource manager at &amp;lt;em&amp;gt;redacted&amp;lt;/em&amp;gt;, a well-funded startup 
based in the US. I went through your Github profile and thought that you would be a good 
fit for the position that I&amp;#39;m trying to fill. This is a long term position. The main 
benefit of the job is its flexibility which allows you to work at your most convenient 
time and location, and we can also send you a prepaid retainer! - details below.  
Let me know whether you&amp;#39;re interested in discussing this opportunity.

 - &amp;lt;em&amp;gt;redacted&amp;lt;/em&amp;gt;

OFFSITE ROR Developers (front/back-end)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Word to the wise: if you want to recruit developers you better put a little more effort into it. Targeting an info account for a conference is a major fail!&lt;/p&gt;

&lt;p&gt;Initially I did not redact any of the information, but I then googled the company and it turns out it&amp;#39;s a legitimate, obviously small, web development consultancy in the US. It seemed a pity to land the HR manager who sent that email in hot waters. You know who you are, do better next time.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Sep 2013 16:16:43 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/rumblings/2013/09/04/recruiter-fail</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/rumblings/2013/09/04/recruiter-fail</guid>
      </item>
    
      <item>
        <title>Back on the saddle</title>
        <description>&lt;p&gt;Man it&amp;#39;s been a long time!&lt;/p&gt;

&lt;p&gt;It&amp;#39;s been over a year since I published anything on this blog. And it&amp;#39;s been a busy year, an upside-down year, a year of upheaval.&lt;/p&gt;

&lt;p&gt;First of all Joyent decided to terminate it&amp;#39;s VPS hosting in favour of their cloud offerings, thus switching off all textdrive remnants.
They couldn&amp;#39;t have chosen a worse time for it. With preparations for EuRuKo 2013 in full swing there was simply not enough time to take care of moving.&lt;/p&gt;

&lt;p&gt;So I left it until the servers were turned off. And thus ampelofilosofies disappeared from the net.&lt;/p&gt;

&lt;p&gt;Time to remedy that. After a well earned holiday I get to sit down and redo the blog. Way back in 2005 the third incarnation of this blog (it&amp;#39;s like Doctor Who, it keeps coming back in different forms since 1996) was a static site generated from  HTML and Textile sources and a bunch of home brewed ruby scripts. Back then I was convinced it was the best way to manage my content: text based, version controlled and easy to transform.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;/software/2009-10-05-putting-it-back-together&quot;&gt;4th incarnation&lt;/a&gt; was a Radiant based site. At the time it was easy to setup, there was a wealth of plugins that allowed things like image galleries, comments and attachements so it seemed like a good idea. And I switched from textile to markdown.&lt;/p&gt;

&lt;p&gt;Fast forward 4 years (which seems to be the &amp;quot;reincarnation&amp;quot; time for some reason) and that &amp;quot;good&amp;quot; idea proved to be a big impediment in getting the site back up in the limited free time available. The venerable Radiant installation that was running on the hosted server was outdated, upgrading to the current version proved a huge chore, none of the plugins runs anymore and my content is locked in an sqlite3 database making extraction rather cumbersome.&lt;/p&gt;

&lt;p&gt;This is not about bashing Radiant. It&amp;#39;s more about me not having the time to keep up with the updates in a viable way while having adopted Radiant quite early in it&amp;#39;s development cycle. The latest version has the upgrade process under wraps, but I&amp;#39;m left with an ancient codebase barely running on ruby 1.8.7.&lt;/p&gt;

&lt;p&gt;I still prefer the generate-from-text-source approach. Luckily, since I have absolutely no inclination in resurrecting my ruby scripts (omg! I look at the ruby code I wrote in 2005 and I scoff at the naive stranger who thought it was good), Jekyll follows exactly the same philosophy - only it does things right.&lt;/p&gt;

&lt;p&gt;It has been an enormous pleasure rescuing all the content from the clutches of sqlite3 and Jekyll has proven a joy to work with.&lt;/p&gt;

&lt;p&gt;The most important thing in the migration from Radiant to Jekyll has been maintaining the permalinks. Analytics show that there are some poor souls visiting and linking to a few of my articles (&lt;a href=&quot;/2010/05/20/rumblings/things-you-should-know-while-dating-a-computer-programmer&quot;&gt;Things you should know while dating a computer programmer&lt;/a&gt; being the most popular for some reason) so it would be bad form to change the links. Bad enough that they have been offline for so long.&lt;/p&gt;

&lt;p&gt;Thankfully Jekyll makes it very easy to change the default permalink scheme. So in the coming days I will complete the migration of the content, rework the appearance of the site, activate RSS and comments. After that there&amp;#39;s a few articles that need publishing. Like I said, it has been a long, busy and above all interesting year.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Aug 2013 01:08:43 +0200</pubDate>
        <link>http://www.ampelofilosofies.gr/rumblings/2013/08/30/back-on-the-saddle</link>
        <guid isPermaLink="true">http://www.ampelofilosofies.gr/rumblings/2013/08/30/back-on-the-saddle</guid>
      </item>
    
  </channel>
</rss>